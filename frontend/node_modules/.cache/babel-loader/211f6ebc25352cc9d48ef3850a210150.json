{"ast":null,"code":"var _jsxFileName = \"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/components/MatchesScreen/LatestMessage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ReplyIcon from \"@material-ui/icons/Reply\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Loader from \"../Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  iconLarge: {\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  }\n}));\n\nfunction LatestMessage({\n  history,\n  item\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [chatUserInfo, setChatUserInfo] = useState();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const config = {\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`\n    }\n  };\n  useEffect(async () => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (item.user_id == userInfo.id) {\n        const {\n          data\n        } = await axios.get(`/api/users/chatuser/${userInfo.id}/${item.chat_room_id}/`, config);\n        setChatUserInfo(data);\n      } else {\n        const {\n          data\n        } = await axios.get(`/api/users/cards/id/${item.user_id}/`, config);\n        setChatUserInfo(data);\n      }\n    }\n  }, [history, userInfo]);\n  return chatUserInfo ? /*#__PURE__*/_jsxDEV(HashLink, {\n    to: `/messages/${chatUserInfo.id}#latest_message`,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      p: 1,\n      borderBottom: \"1px solid #dfe0df\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: chatUserInfo.image,\n        alt: \"Profile Photo\",\n        className: classes.iconLarge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 2,\n        minWidth: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h2\",\n          variant: \"h5\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: chatUserInfo.first_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"p\",\n          variant: \"h5\",\n          color: !item.read && item.user_id != userInfo.id ? \"textPrimary\" : \"textSecondary\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              component: \"span\",\n              children: item.user_id == userInfo.id && /*#__PURE__*/_jsxDEV(ReplyIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              component: \"span\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\",\n              children: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LatestMessage, \"C2IUtEdhVT81k9Jud1D11Lw9yHM=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = LatestMessage;\nexport default LatestMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LatestMessage\");","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/components/MatchesScreen/LatestMessage.jsx"],"names":["React","useState","useEffect","HashLink","useSelector","axios","Box","Typography","Avatar","ReplyIcon","makeStyles","Loader","useStyles","theme","iconLarge","width","spacing","height","LatestMessage","history","item","classes","chatUserInfo","setChatUserInfo","userLogin","state","userInfo","config","headers","Authorization","token","push","user_id","id","data","get","chat_room_id","image","first_name","read","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { useSelector } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ReplyIcon from \"@material-ui/icons/Reply\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Loader from \"../Loader\";\n\nconst useStyles = makeStyles((theme) => ({\n  iconLarge: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n  },\n}));\n\nfunction LatestMessage({ history, item }) {\n  const classes = useStyles();\n\n  const [chatUserInfo, setChatUserInfo] = useState();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const config = {\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n\n  useEffect(async () => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (item.user_id == userInfo.id) {\n        const { data } = await axios.get(\n          `/api/users/chatuser/${userInfo.id}/${item.chat_room_id}/`,\n          config\n        );\n\n        setChatUserInfo(data);\n      } else {\n        const { data } = await axios.get(\n          `/api/users/cards/id/${item.user_id}/`,\n          config\n        );\n\n        setChatUserInfo(data);\n      }\n    }\n  }, [history, userInfo]);\n\n  return chatUserInfo ? (\n    <HashLink to={`/messages/${chatUserInfo.id}#latest_message`}>\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        p={1}\n        borderBottom=\"1px solid #dfe0df\"\n        alignItems=\"center\"\n      >\n        <Avatar\n          src={chatUserInfo.image}\n          alt=\"Profile Photo\"\n          className={classes.iconLarge}\n        />\n        <Box p={2} minWidth=\"0\">\n          <Typography component=\"h2\" variant=\"h5\">\n            <strong>{chatUserInfo.first_name}</strong>\n          </Typography>\n          <Typography\n            component=\"p\"\n            variant=\"h5\"\n            color={\n              !item.read && item.user_id != userInfo.id\n                ? \"textPrimary\"\n                : \"textSecondary\"\n            }\n          >\n            <Box component=\"span\" display=\"flex\" justifyContent=\"flex-start\">\n              <Box component=\"span\">\n                {item.user_id == userInfo.id && <ReplyIcon />}\n              </Box>\n              <Box\n                component=\"span\"\n                overflow=\"hidden\"\n                textOverflow=\"ellipsis\"\n                whiteSpace=\"nowrap\"\n              >\n                {item.text}\n              </Box>\n            </Box>\n          </Typography>\n        </Box>\n      </Box>\n    </HashLink>\n  ) : (\n    <Loader />\n  );\n}\n\nexport default LatestMessage;\n"]},"metadata":{},"sourceType":"module"}