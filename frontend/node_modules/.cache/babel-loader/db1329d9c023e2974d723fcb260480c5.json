{"ast":null,"code":"var _jsxFileName = \"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/components/ProfilePhotoUploader.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport Box from \"@material-ui/core/Box\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Loader from \"../components/Loader\";\nimport { USER_DETAILS_SUCCESS } from \"../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfilePhotoUploader() {\n  _s();\n\n  const [image, setImage] = useState(\"/images/unknown.png\");\n  const [message, setMessage] = useState();\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    user\n  } = userDetails;\n\n  const uploadImageHandler = async e => {\n    setUploading(true);\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    formData.append(\"user_id\", userInfo.id);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/users/profile/image/upload/\", formData, config);\n      setImage(data.image);\n      setUploading(false);\n      dispatch({\n        type: USER_DETAILS_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      setMessage(error);\n      setUploading(false);\n    }\n  };\n\n  useEffect(() => {\n    setImage(user.image);\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [message && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this), uploading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CardMedia, {\n      image: image ? image : \"/images/unknown.png\",\n      title: \"Profile Photo\",\n      style: {\n        position: \"relative\",\n        height: \"0\",\n        paddingTop: \"56.25%\",\n        margin: \"0 auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        justify: \"flex-end\",\n        style: {\n          position: \"absolute\",\n          bottom: \"0\",\n          right: \"0\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          m: 2,\n          children: /*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"upload-image\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"upload-image\",\n              type: \"file\",\n              name: \"upload-image\",\n              style: {\n                display: \"none\"\n              },\n              onChange: uploadImageHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                backgroundColor: \"#f50057\"\n              },\n              component: \"span\",\n              children: /*#__PURE__*/_jsxDEV(AddAPhotoIcon, {\n                style: {\n                  color: \"#fff\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfilePhotoUploader, \"JQdlAog8LZMUQBCB4EH55QQ86MQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProfilePhotoUploader;\nexport default ProfilePhotoUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePhotoUploader\");","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/components/ProfilePhotoUploader.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","axios","Box","CardMedia","Grid","Input","InputLabel","IconButton","AddAPhotoIcon","Alert","Loader","USER_DETAILS_SUCCESS","ProfilePhotoUploader","image","setImage","message","setMessage","uploading","setUploading","dispatch","userLogin","state","userInfo","userDetails","user","uploadImageHandler","e","file","target","files","formData","FormData","append","id","config","headers","Authorization","token","data","post","type","payload","error","position","height","paddingTop","margin","bottom","right","display","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport Box from \"@material-ui/core/Box\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport Loader from \"../components/Loader\";\n\nimport { USER_DETAILS_SUCCESS } from \"../constants/userConstants\";\n\nfunction ProfilePhotoUploader() {\n  const [image, setImage] = useState(\"/images/unknown.png\");\n  const [message, setMessage] = useState();\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { user } = userDetails;\n\n  const uploadImageHandler = async (e) => {\n    setUploading(true);\n\n    const file = e.target.files[0];\n    const formData = new FormData();\n\n    formData.append(\"image\", file);\n    formData.append(\"user_id\", userInfo.id);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/users/profile/image/upload/\",\n        formData,\n        config\n      );\n\n      setImage(data.image);\n      setUploading(false);\n\n      dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n      setMessage(error);\n      setUploading(false);\n    }\n  };\n\n  useEffect(() => {\n    setImage(user.image);\n  }, [user]);\n\n  return (\n    <Box>\n      {message && <Alert severity=\"error\">{message}</Alert>}\n      {uploading ? (\n        <Loader />\n      ) : (\n        <CardMedia\n          image={image ? image : \"/images/unknown.png\"}\n          title=\"Profile Photo\"\n          style={{\n            position: \"relative\",\n            height: \"0\",\n            paddingTop: \"56.25%\",\n            margin: \"0 auto\",\n          }}\n        >\n          <Grid\n            container\n            alignItems=\"center\"\n            justify=\"flex-end\"\n            style={{ position: \"absolute\", bottom: \"0\", right: \"0\" }}\n          >\n            <Box m={2}>\n              <InputLabel htmlFor=\"upload-image\">\n                <Input\n                  id=\"upload-image\"\n                  type=\"file\"\n                  name=\"upload-image\"\n                  style={{ display: \"none\" }}\n                  onChange={uploadImageHandler}\n                />\n\n                <IconButton\n                  style={{\n                    backgroundColor: \"#f50057\",\n                  }}\n                  component=\"span\"\n                >\n                  <AddAPhotoIcon\n                    style={{\n                      color: \"#fff\",\n                    }}\n                  />\n                </IconButton>\n              </InputLabel>\n            </Box>\n          </Grid>\n        </CardMedia>\n      )}\n    </Box>\n  );\n}\n\nexport default ProfilePhotoUploader;\n"]},"metadata":{},"sourceType":"module"}