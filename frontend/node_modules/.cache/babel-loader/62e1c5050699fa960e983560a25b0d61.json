{"ast":null,"code":"var _jsxFileName = \"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/components/RecsScreen/SwipeButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\nimport { onBlock, offBlock } from \"../../actions/blockActions\";\nimport createChatRoom from \"../../functions/createChatRoom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SwipeButtons = ({\n  cardIsEmpty\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const cardList = useSelector(state => state.cardList);\n  const {\n    loading,\n    cards\n  } = cardList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const config = {\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`\n    }\n  };\n  const isBlocked = useSelector(state => state.isBlocked);\n  useEffect(() => {\n    if (loading === false && cards && cards.length > 0) {\n      dispatch(offBlock());\n    }\n  }, [dispatch, loading]);\n\n  const swipeCard = async likeOrNope => {\n    if (isBlocked) return;\n    const target = document.getElementsByClassName(\"card\")[0];\n    const nextTarget = document.getElementsByClassName(\"card\")[1];\n    dispatch(onBlock()); // Show LIKE or NOPE\n\n    document.getElementsByClassName(`card__${likeOrNope}`)[0].style.opacity = 1; // Add animation of LIKE or NOPE\n\n    setTimeout(() => target.classList.add(likeOrNope), 100); // Remove the swiped Card\n\n    setTimeout(() => target.remove(), 600); // React by LIKE or NOPE\n\n    await axios.post(\"/api/reactions/swipe/\", {\n      fromUserId: userInfo.id,\n      toUserId: Number(target.id),\n      status: likeOrNope === \"like\" ? \"L\" : \"N\"\n    }, config); // If match, create chat room and chat room users\n\n    if (likeOrNope === \"like\") {\n      createChatRoom(userInfo.id, target.id, config);\n    } // If all Cards have been swiped, show Empty component\n\n\n    if (nextTarget === undefined) {\n      setTimeout(() => cardIsEmpty(), 600);\n      dispatch(onBlock());\n    } else {\n      setTimeout(() => dispatch(offBlock()), 600);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"swipe-btns__container\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"swipe-btns max-width\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"swipe-btns__back\",\n        disabled: isBlocked,\n        children: /*#__PURE__*/_jsxDEV(ReplayIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"swipe-btns__dislike\",\n        disabled: isBlocked,\n        onClick: () => {\n          swipeCard(\"nope\");\n        },\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"swipe-btns__super-like\",\n        disabled: isBlocked,\n        children: /*#__PURE__*/_jsxDEV(StarRateIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"swipe-btns__like\",\n        disabled: isBlocked,\n        onClick: () => {\n          swipeCard(\"like\");\n        },\n        children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"swipe-btns__boost\",\n        disabled: isBlocked,\n        children: /*#__PURE__*/_jsxDEV(FlashOnIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SwipeButtons, \"Kj2PNwa7oVTISsNUnKt1xZx4xpE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = SwipeButtons;\nexport default SwipeButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwipeButtons\");","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/components/RecsScreen/SwipeButtons.jsx"],"names":["React","useEffect","useSelector","useDispatch","axios","Box","IconButton","ReplayIcon","CloseIcon","StarRateIcon","FavoriteIcon","FlashOnIcon","onBlock","offBlock","createChatRoom","SwipeButtons","cardIsEmpty","dispatch","cardList","state","loading","cards","userLogin","userInfo","config","headers","Authorization","token","isBlocked","length","swipeCard","likeOrNope","target","document","getElementsByClassName","nextTarget","style","opacity","setTimeout","classList","add","remove","post","fromUserId","id","toUserId","Number","status","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\n\nimport { onBlock, offBlock } from \"../../actions/blockActions\";\n\nimport createChatRoom from \"../../functions/createChatRoom\";\n\nconst SwipeButtons = ({ cardIsEmpty }) => {\n  const dispatch = useDispatch();\n\n  const cardList = useSelector((state) => state.cardList);\n  const { loading, cards } = cardList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const config = {\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n\n  const isBlocked = useSelector((state) => state.isBlocked);\n\n  useEffect(() => {\n    if (loading === false && cards && cards.length > 0) {\n      dispatch(offBlock());\n    }\n  }, [dispatch, loading]);\n\n  const swipeCard = async (likeOrNope) => {\n    if (isBlocked) return;\n\n    const target = document.getElementsByClassName(\"card\")[0];\n    const nextTarget = document.getElementsByClassName(\"card\")[1];\n\n    dispatch(onBlock());\n\n    // Show LIKE or NOPE\n    document.getElementsByClassName(`card__${likeOrNope}`)[0].style.opacity = 1;\n\n    // Add animation of LIKE or NOPE\n    setTimeout(() => target.classList.add(likeOrNope), 100);\n\n    // Remove the swiped Card\n    setTimeout(() => target.remove(), 600);\n\n    // React by LIKE or NOPE\n    await axios.post(\n      \"/api/reactions/swipe/\",\n      {\n        fromUserId: userInfo.id,\n        toUserId: Number(target.id),\n        status: likeOrNope === \"like\" ? \"L\" : \"N\",\n      },\n      config\n    );\n\n    // If match, create chat room and chat room users\n    if (likeOrNope === \"like\") {\n      createChatRoom(userInfo.id, target.id, config);\n    }\n\n    // If all Cards have been swiped, show Empty component\n    if (nextTarget === undefined) {\n      setTimeout(() => cardIsEmpty(), 600);\n      dispatch(onBlock());\n    } else {\n      setTimeout(() => dispatch(offBlock()), 600);\n    }\n  };\n\n  return (\n    <Box className=\"swipe-btns__container\">\n      <Box className=\"swipe-btns max-width\">\n        <IconButton className=\"swipe-btns__back\" disabled={isBlocked}>\n          <ReplayIcon fontSize=\"large\" />\n        </IconButton>\n\n        <IconButton\n          className=\"swipe-btns__dislike\"\n          disabled={isBlocked}\n          onClick={() => {\n            swipeCard(\"nope\");\n          }}\n        >\n          <CloseIcon fontSize=\"large\" />\n        </IconButton>\n\n        <IconButton className=\"swipe-btns__super-like\" disabled={isBlocked}>\n          <StarRateIcon fontSize=\"large\" />\n        </IconButton>\n\n        <IconButton\n          className=\"swipe-btns__like\"\n          disabled={isBlocked}\n          onClick={() => {\n            swipeCard(\"like\");\n          }}\n        >\n          <FavoriteIcon fontSize=\"large\" />\n        </IconButton>\n\n        <IconButton className=\"swipe-btns__boost\" disabled={isBlocked}>\n          <FlashOnIcon fontSize=\"large\" />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SwipeButtons;\n"]},"metadata":{},"sourceType":"module"}