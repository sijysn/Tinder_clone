{"ast":null,"code":"import axios from \"axios\";\nimport { CARD_LIST_REQUEST, CARD_LIST_SUCCESS, CARD_LIST_FAIL, CARD_LIST_RESET, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_RESET, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_DETAILS_UPDATE_REQUEST, USER_DETAILS_UPDATE_SUCCESS, USER_DETAILS_UPDATE_FAIL, USER_PROFILE_UPDATE_REQUEST, USER_PROFILE_UPDATE_SUCCESS, USER_PROFILE_UPDATE_FAIL, NEW_MATCHES_LIST_REQUEST, NEW_MATCHES_LIST_SUCCESS, NEW_MATCHES_LIST_FAIL, NEW_MATCHES_LIST_RESET, LIKES_LIST_REQUEST, LIKES_LIST_SUCCESS, LIKES_LIST_FAIL, LIKES_LIST_RESET } from \"../constants/userConstants\";\nimport { BLOCK_ON } from \"../constants/blockConstants\";\nexport const listCards = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CARD_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/cards/${userInfo.id}/`, config);\n    dispatch({\n      type: CARD_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CARD_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login/\", {\n      username: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: CARD_LIST_RESET\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: NEW_MATCHES_LIST_RESET\n  });\n  dispatch({\n    type: LIKES_LIST_RESET\n  });\n  dispatch({\n    type: BLOCK_ON\n  });\n  localStorage.removeItem(\"userInfo\");\n};\nexport const register = (name, email, password, genderIdentity, birthDate) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/register/\", {\n      name: name,\n      email: email,\n      password: password,\n      genderIdentity: genderIdentity,\n      birthDate: birthDate\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_REGISTER_RESET\n    });\n    const loginData = await axios.post(\"/api/users/login/\", {\n      username: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: loginData.data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/profile/`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = (name, email, password) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_PROFILE_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"/api/users/profile/update/\", {\n      name: name,\n      email: email,\n      password: password\n    }, config);\n    dispatch({\n      type: USER_PROFILE_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_PROFILE_UPDATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserDetails = (profession, selfIntroduction, genderIdentity, sexualPreference) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"/api/users/details/update/\", {\n      profession: profession,\n      selfIntroduction: selfIntroduction,\n      genderIdentity: genderIdentity,\n      sexualPreference: sexualPreference\n    }, config);\n    dispatch({\n      type: USER_DETAILS_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_DETAILS_UPDATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getNewMatchesList = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NEW_MATCHES_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }; // Get ChatRoomUsers the user joins\n\n    const newMatchesList = await axios.get(`/api/users/newmatches/${userInfo.id}/`, config);\n    dispatch({\n      type: NEW_MATCHES_LIST_SUCCESS,\n      payload: newMatchesList.data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_MATCHES_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getLikesList = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: LIKES_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }; // Get ChatRoomUsers the user joins\n\n    const {\n      data\n    } = await axios.get(`/api/users/likes/${userInfo.id}/`, config);\n    dispatch({\n      type: LIKES_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: LIKES_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/actions/userActions.js"],"names":["axios","CARD_LIST_REQUEST","CARD_LIST_SUCCESS","CARD_LIST_FAIL","CARD_LIST_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_DETAILS_UPDATE_REQUEST","USER_DETAILS_UPDATE_SUCCESS","USER_DETAILS_UPDATE_FAIL","USER_PROFILE_UPDATE_REQUEST","USER_PROFILE_UPDATE_SUCCESS","USER_PROFILE_UPDATE_FAIL","NEW_MATCHES_LIST_REQUEST","NEW_MATCHES_LIST_SUCCESS","NEW_MATCHES_LIST_FAIL","NEW_MATCHES_LIST_RESET","LIKES_LIST_REQUEST","LIKES_LIST_SUCCESS","LIKES_LIST_FAIL","LIKES_LIST_RESET","BLOCK_ON","listCards","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","id","payload","error","response","detail","message","login","email","password","post","username","localStorage","setItem","JSON","stringify","logout","removeItem","register","name","genderIdentity","birthDate","loginData","getUserDetails","updateUserProfile","put","console","log","updateUserDetails","profession","selfIntroduction","sexualPreference","getNewMatchesList","newMatchesList","getLikesList"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport {\n  CARD_LIST_REQUEST,\n  CARD_LIST_SUCCESS,\n  CARD_LIST_FAIL,\n  CARD_LIST_RESET,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_RESET,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_DETAILS_UPDATE_REQUEST,\n  USER_DETAILS_UPDATE_SUCCESS,\n  USER_DETAILS_UPDATE_FAIL,\n  USER_PROFILE_UPDATE_REQUEST,\n  USER_PROFILE_UPDATE_SUCCESS,\n  USER_PROFILE_UPDATE_FAIL,\n  NEW_MATCHES_LIST_REQUEST,\n  NEW_MATCHES_LIST_SUCCESS,\n  NEW_MATCHES_LIST_FAIL,\n  NEW_MATCHES_LIST_RESET,\n  LIKES_LIST_REQUEST,\n  LIKES_LIST_SUCCESS,\n  LIKES_LIST_FAIL,\n  LIKES_LIST_RESET,\n} from \"../constants/userConstants\";\n\nimport { BLOCK_ON } from \"../constants/blockConstants\";\n\nexport const listCards = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CARD_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\n      `/api/users/cards/${userInfo.id}/`,\n      config\n    );\n\n    dispatch({\n      type: CARD_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CARD_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login/\",\n      { username: email, password: password },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: CARD_LIST_RESET });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: NEW_MATCHES_LIST_RESET });\n  dispatch({ type: LIKES_LIST_RESET });\n  dispatch({ type: BLOCK_ON });\n  localStorage.removeItem(\"userInfo\");\n};\n\nexport const register = (\n  name,\n  email,\n  password,\n  genderIdentity,\n  birthDate\n) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/register/\",\n      {\n        name: name,\n        email: email,\n        password: password,\n        genderIdentity: genderIdentity,\n        birthDate: birthDate,\n      },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    dispatch({ type: USER_REGISTER_RESET });\n\n    const loginData = await axios.post(\n      \"/api/users/login/\",\n      { username: email, password: password },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: loginData.data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/profile/`, config);\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (name, email, password) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({ type: USER_PROFILE_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      \"/api/users/profile/update/\",\n      {\n        name: name,\n        email: email,\n        password: password,\n      },\n      config\n    );\n\n    dispatch({ type: USER_PROFILE_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_PROFILE_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserDetails = (\n  profession,\n  selfIntroduction,\n  genderIdentity,\n  sexualPreference\n) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      \"/api/users/details/update/\",\n      {\n        profession: profession,\n        selfIntroduction: selfIntroduction,\n        genderIdentity: genderIdentity,\n        sexualPreference: sexualPreference,\n      },\n      config\n    );\n\n    dispatch({ type: USER_DETAILS_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_DETAILS_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getNewMatchesList = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: NEW_MATCHES_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    // Get ChatRoomUsers the user joins\n    const newMatchesList = await axios.get(\n      `/api/users/newmatches/${userInfo.id}/`,\n      config\n    );\n\n    dispatch({\n      type: NEW_MATCHES_LIST_SUCCESS,\n      payload: newMatchesList.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_MATCHES_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getLikesList = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: LIKES_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    // Get ChatRoomUsers the user joins\n    const { data } = await axios.get(\n      `/api/users/likes/${userInfo.id}/`,\n      config\n    );\n\n    dispatch({\n      type: LIKES_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: LIKES_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}