{"ast":null,"code":"import _objectSpread from\"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import Container from\"@material-ui/core/Container\";import TextField from\"@material-ui/core/TextField\";import Autocomplete from\"@material-ui/lab/Autocomplete\";import Box from\"@material-ui/core/Box\";import Button from\"@material-ui/core/Button\";import CssBaseline from\"@material-ui/core/CssBaseline\";import Alert from\"@material-ui/lab/Alert\";import Loader from\"../components/Loader\";import SettingsHeader from\"../components/SettingsHeader\";import ProfilePhotoUploader from\"../components/ProfilePhotoUploader\";import{updateUserDetails,getUserDetails,listCards}from\"../actions/userActions\";import{USER_DETAILS_UPDATE_RESET}from\"../constants/userConstants\";import{genderIdentities,sexualPreferences}from\"../constants/genderConstants\";import{useStyles}from\"../styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProfileEditScreen(_ref){var history=_ref.history;var classes=useStyles();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),profession=_useState2[0],setProfession=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),selfIntroduction=_useState4[0],setSelfIntroduction=_useState4[1];var _useState5=useState(\"Male\"),_useState6=_slicedToArray(_useState5,2),genderIdentity=_useState6[0],setGenderIdentity=_useState6[1];var _useState7=useState(\"Male\"),_useState8=_slicedToArray(_useState7,2),inputGenderIdentity=_useState8[0],setInputGenderIdentity=_useState8[1];var _useState9=useState(\"All\"),_useState10=_slicedToArray(_useState9,2),sexualPreference=_useState10[0],setSexualPreference=_useState10[1];var _useState11=useState(\"All\"),_useState12=_slicedToArray(_useState11,2),inputSexualPreference=_useState12[0],setInputSexualPreference=_useState12[1];var dispatch=useDispatch();var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userUpdateDetails=useSelector(function(state){return state.userUpdateDetails;});var success=userUpdateDetails.success;var updateHandler=function updateHandler(e){e.preventDefault();dispatch(updateUserDetails(profession,selfIntroduction,genderIdentity,sexualPreference));};useEffect(function(){if(!userInfo){history.push(\"/login\");}else if(!user){dispatch(getUserDetails());}else if(success){dispatch({type:USER_DETAILS_UPDATE_RESET});dispatch(listCards());dispatch(getUserDetails());history.push(\"/profile\");}else{setProfession(user.profession?user.profession:\"\");setSelfIntroduction(user.self_introduction?user.self_introduction:\"\");setGenderIdentity(user.gender_identity);setInputGenderIdentity(user.gender_identity);setSexualPreference(user.sexual_preference);setInputSexualPreference(user.sexual_preference);}},[dispatch,history,userInfo,user,success]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SettingsHeader,{title:\"EDITINGS\",backTo:\"/profile\"}),/*#__PURE__*/_jsx(Box,{mt:1,children:/*#__PURE__*/_jsxs(Container,{maxWidth:\"xs\",children:[/*#__PURE__*/_jsx(CssBaseline,{}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:error}):user&&/*#__PURE__*/_jsxs(Box,{textAlign:\"center\",maxHeight:\"100vh\",pb:\"5rem\",style:{overflowY:\"scroll\",flexWrap:\"nowrap\"},children:[/*#__PURE__*/_jsx(ProfilePhotoUploader,{}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:updateHandler,children:[/*#__PURE__*/_jsx(TextField,{label:\"Profession\",value:profession,variant:\"outlined\",autoFocus:true,fullWidth:true,margin:\"normal\",multiline:true,onChange:function onChange(e){return setProfession(e.target.value);}}),/*#__PURE__*/_jsx(TextField,{label:\"Self Introduction\",value:selfIntroduction,variant:\"outlined\",fullWidth:true,margin:\"normal\",multiline:true,onChange:function onChange(e){return setSelfIntroduction(e.target.value);}}),/*#__PURE__*/_jsx(Autocomplete,{fullWidth:true,options:genderIdentities,value:genderIdentity,onChange:function onChange(e,newValue){return setGenderIdentity(newValue);},inputValue:inputGenderIdentity,onInputChange:function onInputChange(e,newInputValue){return setInputGenderIdentity(newInputValue);},renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Gender Identity\",variant:\"outlined\",margin:\"normal\"}));}}),/*#__PURE__*/_jsx(Autocomplete,{fullWidth:true,options:sexualPreferences,value:sexualPreference,onChange:function onChange(e,newValue){return setSexualPreference(newValue);},inputValue:inputSexualPreference,onInputChange:function onInputChange(e,newInputValue){return setInputSexualPreference(newInputValue);},renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Sexual Preference\",variant:\"outlined\",margin:\"normal\"}));}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"secondary\",className:classes.submit,children:\"UPDATE\"})]})]})]})})]});}export default ProfileEditScreen;","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/screens/ProfileEditScreen.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","Container","TextField","Autocomplete","Box","Button","CssBaseline","Alert","Loader","SettingsHeader","ProfilePhotoUploader","updateUserDetails","getUserDetails","listCards","USER_DETAILS_UPDATE_RESET","genderIdentities","sexualPreferences","useStyles","ProfileEditScreen","history","classes","profession","setProfession","selfIntroduction","setSelfIntroduction","genderIdentity","setGenderIdentity","inputGenderIdentity","setInputGenderIdentity","sexualPreference","setSexualPreference","inputSexualPreference","setInputSexualPreference","dispatch","userLogin","state","userInfo","userDetails","loading","error","user","userUpdateDetails","success","updateHandler","e","preventDefault","push","type","self_introduction","gender_identity","sexual_preference","overflowY","flexWrap","target","value","newValue","newInputValue","params","submit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport Loader from \"../components/Loader\";\nimport SettingsHeader from \"../components/SettingsHeader\";\nimport ProfilePhotoUploader from \"../components/ProfilePhotoUploader\";\n\nimport {\n  updateUserDetails,\n  getUserDetails,\n  listCards,\n} from \"../actions/userActions\";\n\nimport { USER_DETAILS_UPDATE_RESET } from \"../constants/userConstants\";\n\nimport {\n  genderIdentities,\n  sexualPreferences,\n} from \"../constants/genderConstants\";\n\nimport { useStyles } from \"../styles\";\n\nfunction ProfileEditScreen({ history }) {\n  const classes = useStyles();\n\n  const [profession, setProfession] = useState(\"\");\n  const [selfIntroduction, setSelfIntroduction] = useState(\"\");\n  const [genderIdentity, setGenderIdentity] = useState(\"Male\");\n  const [inputGenderIdentity, setInputGenderIdentity] = useState(\"Male\");\n  const [sexualPreference, setSexualPreference] = useState(\"All\");\n  const [inputSexualPreference, setInputSexualPreference] = useState(\"All\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdateDetails = useSelector((state) => state.userUpdateDetails);\n  const { success } = userUpdateDetails;\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateUserDetails(\n        profession,\n        selfIntroduction,\n        genderIdentity,\n        sexualPreference\n      )\n    );\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else if (!user) {\n      dispatch(getUserDetails());\n    } else if (success) {\n      dispatch({ type: USER_DETAILS_UPDATE_RESET });\n      dispatch(listCards());\n      dispatch(getUserDetails());\n      history.push(\"/profile\");\n    } else {\n      setProfession(user.profession ? user.profession : \"\");\n      setSelfIntroduction(user.self_introduction ? user.self_introduction : \"\");\n      setGenderIdentity(user.gender_identity);\n      setInputGenderIdentity(user.gender_identity);\n      setSexualPreference(user.sexual_preference);\n      setInputSexualPreference(user.sexual_preference);\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  return (\n    <div>\n      <SettingsHeader title=\"EDITINGS\" backTo=\"/profile\" />\n\n      <Box mt={1}>\n        <Container maxWidth=\"xs\">\n          <CssBaseline />\n          {loading ? (\n            <Loader />\n          ) : error ? (\n            <Alert severity=\"error\">{error}</Alert>\n          ) : (\n            user && (\n              <Box\n                textAlign=\"center\"\n                maxHeight=\"100vh\"\n                pb=\"5rem\"\n                style={{\n                  overflowY: \"scroll\",\n                  flexWrap: \"nowrap\",\n                }}\n              >\n                <ProfilePhotoUploader />\n\n                <form onSubmit={updateHandler}>\n                  <TextField\n                    label=\"Profession\"\n                    value={profession}\n                    variant=\"outlined\"\n                    autoFocus\n                    fullWidth\n                    margin=\"normal\"\n                    multiline\n                    onChange={(e) => setProfession(e.target.value)}\n                  ></TextField>\n\n                  <TextField\n                    label=\"Self Introduction\"\n                    value={selfIntroduction}\n                    variant=\"outlined\"\n                    fullWidth\n                    margin=\"normal\"\n                    multiline\n                    onChange={(e) => setSelfIntroduction(e.target.value)}\n                  ></TextField>\n\n                  <Autocomplete\n                    fullWidth\n                    options={genderIdentities}\n                    value={genderIdentity}\n                    onChange={(e, newValue) => setGenderIdentity(newValue)}\n                    inputValue={inputGenderIdentity}\n                    onInputChange={(e, newInputValue) =>\n                      setInputGenderIdentity(newInputValue)\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Gender Identity\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                      />\n                    )}\n                  />\n\n                  <Autocomplete\n                    fullWidth\n                    options={sexualPreferences}\n                    value={sexualPreference}\n                    onChange={(e, newValue) => setSexualPreference(newValue)}\n                    inputValue={inputSexualPreference}\n                    onInputChange={(e, newInputValue) =>\n                      setInputSexualPreference(newInputValue)\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Sexual Preference\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                      />\n                    )}\n                  />\n\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className={classes.submit}\n                  >\n                    UPDATE\n                  </Button>\n                </form>\n              </Box>\n            )\n          )}\n        </Container>\n      </Box>\n    </div>\n  );\n}\n\nexport default ProfileEditScreen;\n"]},"metadata":{},"sourceType":"module"}