{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { cardListReducers, userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateDetailsReducer, userUpdateProfileReducer, newMatchesListReducers, likesListReducers } from \"./reducers/userReducers\";\nimport { blockReducer } from \"./reducers/blockReducers\";\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateDetails: userUpdateDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  cardList: cardListReducers,\n  newMatchesList: newMatchesListReducers,\n  likesList: likesListReducers,\n  isBlocked: blockReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","cardListReducers","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateDetailsReducer","userUpdateProfileReducer","newMatchesListReducers","likesListReducers","blockReducer","reducer","userLogin","userRegister","userDetails","userUpdateDetails","userUpdateProfile","cardList","newMatchesList","likesList","isBlocked","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,kBAJF,EAKEC,wBALF,EAMEC,wBANF,EAOEC,sBAPF,EAQEC,iBARF,QASO,yBATP;AAUA,SAASC,YAAT,QAA6B,0BAA7B;AAEA,MAAMC,OAAO,GAAGb,eAAe,CAAC;AAC9Bc,EAAAA,SAAS,EAAET,gBADmB;AAE9BU,EAAAA,YAAY,EAAET,mBAFgB;AAG9BU,EAAAA,WAAW,EAAET,kBAHiB;AAI9BU,EAAAA,iBAAiB,EAAET,wBAJW;AAK9BU,EAAAA,iBAAiB,EAAET,wBALW;AAM9BU,EAAAA,QAAQ,EAAEf,gBANoB;AAO9BgB,EAAAA,cAAc,EAAEV,sBAPc;AAQ9BW,EAAAA,SAAS,EAAEV,iBARmB;AAS9BW,EAAAA,SAAS,EAAEV;AATmB,CAAD,CAA/B;AAYA,MAAMW,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBd,EAAAA,SAAS,EAAE;AACTe,IAAAA,QAAQ,EAAEN;AADD;AADQ,CAArB;AAMA,MAAMO,UAAU,GAAG,CAAC5B,KAAD,CAAnB;AAEA,MAAM6B,KAAK,GAAGhC,WAAW,CACvBc,OADuB,EAEvBe,YAFuB,EAGvBzB,mBAAmB,CAACF,eAAe,CAAC,GAAG6B,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport {\n  cardListReducers,\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateDetailsReducer,\n  userUpdateProfileReducer,\n  newMatchesListReducers,\n  likesListReducers,\n} from \"./reducers/userReducers\";\nimport { blockReducer } from \"./reducers/blockReducers\";\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateDetails: userUpdateDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  cardList: cardListReducers,\n  newMatchesList: newMatchesListReducers,\n  likesList: likesListReducers,\n  isBlocked: blockReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage,\n  },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}