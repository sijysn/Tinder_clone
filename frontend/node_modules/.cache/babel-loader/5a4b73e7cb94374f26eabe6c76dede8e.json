{"ast":null,"code":"var _jsxFileName = \"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/screens/MessageProfilePreviewScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport SettingsHeader from \"../components/SettingsHeader\";\nimport PreviewCard from \"../components/PreviewCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MessageProfilePreviewScreen({\n  history,\n  match\n}) {\n  _s();\n\n  const id = match.params.id;\n  const [chatUserInfo, setChatUserInfo] = useState();\n  const noUser = {\n    first_name: \"No User\"\n  };\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const config = {\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`\n    }\n  };\n  useEffect(async () => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      const {\n        data\n      } = await axios.get(`/api/users/cards/id/${id}/`, config);\n      setChatUserInfo(data);\n    }\n  }, [history, userInfo]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      my: 1,\n      children: /*#__PURE__*/_jsxDEV(SettingsHeader, {\n        title: \"PREVIEW\",\n        backTo: `/messages/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PreviewCard, {\n      person: chatUserInfo ? chatUserInfo : noUser,\n      className: \"card__preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MessageProfilePreviewScreen, \"LKhREZBSbSCRL8tEqSD9n677W+s=\", false, function () {\n  return [useSelector];\n});\n\n_c = MessageProfilePreviewScreen;\nexport default MessageProfilePreviewScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageProfilePreviewScreen\");","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/screens/MessageProfilePreviewScreen.jsx"],"names":["React","useState","useEffect","useSelector","axios","Box","Container","CssBaseline","SettingsHeader","PreviewCard","MessageProfilePreviewScreen","history","match","id","params","chatUserInfo","setChatUserInfo","noUser","first_name","userLogin","state","userInfo","config","headers","Authorization","token","push","data","get"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAEA,SAASC,2BAAT,CAAqC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAArC,EAAyD;AAAA;;AACvD,QAAMC,EAAE,GAAGD,KAAK,CAACE,MAAN,CAAaD,EAAxB;AAEA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,EAAhD;AAEA,QAAMgB,MAAM,GAAG;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAf;AAEA,QAAMC,SAAS,GAAGhB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeF,SAArB;AAEA,QAAMG,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,GAAf;AAOAvB,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI,CAACmB,QAAL,EAAe;AACbV,MAAAA,OAAO,CAACe,IAAR,CAAa,QAAb;AACD,KAFD,MAEO;AACL,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMvB,KAAK,CAACwB,GAAN,CAAW,uBAAsBf,EAAG,GAApC,EAAwCS,MAAxC,CAAvB;AACAN,MAAAA,eAAe,CAACW,IAAD,CAAf;AACD;AACF,GAPQ,EAON,CAAChB,OAAD,EAAUU,QAAV,CAPM,CAAT;AASA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,SAAtB;AAAgC,QAAA,MAAM,EAAG,aAAYR,EAAG;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,WAAD;AACE,MAAA,MAAM,EAAEE,YAAY,GAAGA,YAAH,GAAkBE,MADxC;AAEE,MAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAvCQP,2B;UAOWP,W;;;KAPXO,2B;AAyCT,eAAeA,2BAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport SettingsHeader from \"../components/SettingsHeader\";\nimport PreviewCard from \"../components/PreviewCard\";\n\nfunction MessageProfilePreviewScreen({ history, match }) {\n  const id = match.params.id;\n\n  const [chatUserInfo, setChatUserInfo] = useState();\n\n  const noUser = { first_name: \"No User\" };\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const config = {\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n\n  useEffect(async () => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      const { data } = await axios.get(`/api/users/cards/id/${id}/`, config);\n      setChatUserInfo(data);\n    }\n  }, [history, userInfo]);\n\n  return (\n    <Container>\n      <CssBaseline />\n      <Box my={1}>\n        <SettingsHeader title=\"PREVIEW\" backTo={`/messages/${id}`} />\n      </Box>\n\n      <PreviewCard\n        person={chatUserInfo ? chatUserInfo : noUser}\n        className=\"card__preview\"\n      ></PreviewCard>\n    </Container>\n  );\n}\n\nexport default MessageProfilePreviewScreen;\n"]},"metadata":{},"sourceType":"module"}