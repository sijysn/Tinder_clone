{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";var createChatRoom=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId,swipedUserId,config){var reaction,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"/api/reactions/\".concat(swipedUserId,\"/\").concat(userId,\"/\"),config);case 2:reaction=_context.sent;if(!(reaction.data.status===\"L\")){_context.next=8;break;}_context.next=6;return axios.post(\"/api/chatroomusers/register/\",{user1Id:userId,user2Id:swipedUserId},config);case 6:_yield$axios$post=_context.sent;data=_yield$axios$post.data;case 8:case\"end\":return _context.stop();}}},_callee);}));return function createChatRoom(_x,_x2,_x3){return _ref.apply(this,arguments);};}();export default createChatRoom;","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/functions/createChatRoom.js"],"names":["axios","createChatRoom","userId","swipedUserId","config","get","reaction","data","status","post","user1Id","user2Id"],"mappings":"qWAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,cAAc,0FAAG,iBAAOC,MAAP,CAAeC,YAAf,CAA6BC,MAA7B,4KACEJ,CAAAA,KAAK,CAACK,GAAN,0BACHF,YADG,aACaD,MADb,MAErBE,MAFqB,CADF,QACfE,QADe,oBAMjBA,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAyB,GANR,gDAOIR,CAAAA,KAAK,CAACS,IAAN,CACrB,8BADqB,CAErB,CACEC,OAAO,CAAER,MADX,CAEES,OAAO,CAAER,YAFX,CAFqB,CAMrBC,MANqB,CAPJ,wCAOXG,IAPW,mBAOXA,IAPW,uDAAH,kBAAdN,CAAAA,cAAc,oDAApB,CAkBA,cAAeA,CAAAA,cAAf","sourcesContent":["import axios from \"axios\";\n\nconst createChatRoom = async (userId, swipedUserId, config) => {\n  const reaction = await axios.get(\n    `/api/reactions/${swipedUserId}/${userId}/`,\n    config\n  );\n\n  if (reaction.data.status === \"L\") {\n    const { data } = await axios.post(\n      \"/api/chatroomusers/register/\",\n      {\n        user1Id: userId,\n        user2Id: swipedUserId,\n      },\n      config\n    );\n  }\n};\n\nexport default createChatRoom;\n"]},"metadata":{},"sourceType":"module"}