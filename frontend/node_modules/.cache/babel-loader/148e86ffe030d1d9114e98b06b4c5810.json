{"ast":null,"code":"var _jsxFileName = \"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/components/MatchesScreen/LatestMessages.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport Box from \"@material-ui/core/Box\";\nimport LatestMessage from \"./LatestMessage\";\nimport Loader from \"../Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LatestMessages({\n  history\n}) {\n  _s();\n\n  const [latestMessagesList, setLatestMessagesList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const config = {\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`\n    }\n  };\n  useEffect(async () => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n  }, [history, userInfo]);\n  useEffect(() => {\n    setLoading(true);\n    let isMounted = true;\n    setInterval(async () => {\n      if (isMounted) {\n        const {\n          data\n        } = await axios.get(`/api/messages/latest/${userInfo.id}/`, config);\n        setLatestMessagesList(data);\n        setLoading(false);\n      }\n    }, 1000);\n    return () => isMounted = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      children: latestMessagesList.length > 0 && latestMessagesList.map(item => /*#__PURE__*/_jsxDEV(LatestMessage, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LatestMessages, \"CKTkIGDM+WhTu0Mm+8GXAduBr7I=\", false, function () {\n  return [useSelector];\n});\n\n_c = LatestMessages;\nexport default LatestMessages;\n\nvar _c;\n\n$RefreshReg$(_c, \"LatestMessages\");","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/components/MatchesScreen/LatestMessages.jsx"],"names":["React","useState","useEffect","useSelector","axios","Box","LatestMessage","Loader","LatestMessages","history","latestMessagesList","setLatestMessagesList","loading","setLoading","userLogin","state","userInfo","config","headers","Authorization","token","push","isMounted","setInterval","data","get","id","length","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAqC;AAAA;;AACnC,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CV,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMa,SAAS,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeF,SAArB;AAEA,QAAMG,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,GAAf;AAOAlB,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI,CAACc,QAAL,EAAe;AACbP,MAAAA,OAAO,CAACY,IAAR,CAAa,QAAb;AACD;AACF,GAJQ,EAIN,CAACZ,OAAD,EAAUO,QAAV,CAJM,CAAT;AAMAd,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,QAAIS,SAAS,GAAG,IAAhB;AAEAC,IAAAA,WAAW,CAAC,YAAY;AACtB,UAAID,SAAJ,EAAe;AACb,cAAM;AAAEE,UAAAA;AAAF,YAAW,MAAMpB,KAAK,CAACqB,GAAN,CACpB,wBAAuBT,QAAQ,CAACU,EAAG,GADf,EAErBT,MAFqB,CAAvB;AAKAN,QAAAA,qBAAqB,CAACa,IAAD,CAArB;AACAX,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAVU,EAUR,IAVQ,CAAX;AAYA,WAAO,MAAOS,SAAS,GAAG,KAA1B;AACD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACE,QAAC,GAAD;AAAA,cACGV,OAAO,gBACN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN,QAAC,GAAD;AAAA,gBACGF,kBAAkB,CAACiB,MAAnB,GAA4B,CAA5B,IACCjB,kBAAkB,CAACkB,GAAnB,CAAwBC,IAAD,iBACrB,QAAC,aAAD;AAAe,QAAA,IAAI,EAAEA;AAArB,SAAgCA,IAAI,CAACH,EAArC;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAtDQlB,c;UAIWL,W;;;KAJXK,c;AAwDT,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport Box from \"@material-ui/core/Box\";\n\nimport LatestMessage from \"./LatestMessage\";\nimport Loader from \"../Loader\";\n\nfunction LatestMessages({ history }) {\n  const [latestMessagesList, setLatestMessagesList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const config = {\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n\n  useEffect(async () => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n  }, [history, userInfo]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    let isMounted = true;\n\n    setInterval(async () => {\n      if (isMounted) {\n        const { data } = await axios.get(\n          `/api/messages/latest/${userInfo.id}/`,\n          config\n        );\n\n        setLatestMessagesList(data);\n        setLoading(false);\n      }\n    }, 1000);\n\n    return () => (isMounted = false);\n  }, []);\n\n  return (\n    <Box>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Box>\n          {latestMessagesList.length > 0 &&\n            latestMessagesList.map((item) => (\n              <LatestMessage item={item} key={item.id} />\n            ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default LatestMessages;\n"]},"metadata":{},"sourceType":"module"}