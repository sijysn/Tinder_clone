{"ast":null,"code":"import _slicedToArray from\"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import Container from\"@material-ui/core/Container\";import CssBaseline from\"@material-ui/core/CssBaseline\";import Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import Typography from\"@material-ui/core/Typography\";import Alert from\"@material-ui/lab/Alert\";import SettingsHeader from\"../components/SettingsHeader\";import{logout,updateUserProfile,getUserDetails}from\"../actions/userActions\";import{USER_PROFILE_UPDATE_RESET}from\"../constants/userConstants\";import{useStyles}from\"../styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SettingsScreen(_ref){var history=_ref.history;var classes=useStyles();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var dispatch=useDispatch();var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;var userUpdateProfile=useSelector(function(state){return state.userUpdateProfile;});var success=userUpdateProfile.success;var updateHandler=function updateHandler(e){e.preventDefault();if(password===confirmPassword){dispatch(updateUserProfile(name,email,password));}else{setMessage(\"Passwords do not match\");}};var logoutHandler=function logoutHandler(){return dispatch(logout());};useEffect(function(){if(!userInfo){history.push(\"/login\");}else if(success){dispatch({type:USER_PROFILE_UPDATE_RESET});dispatch(getUserDetails());history.push(\"/profile\");}else{setName(userInfo.first_name);setEmail(userInfo.email);}},[dispatch,history,userInfo,success]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SettingsHeader,{title:\"SETTINGS\",backTo:\"/profile\"}),/*#__PURE__*/_jsxs(Container,{className:classes.paper,maxWidth:\"xs\",children:[/*#__PURE__*/_jsx(CssBaseline,{}),message&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:message}),/*#__PURE__*/_jsx(Typography,{component:\"h2\",variant:\"h5\",align:\"left\",display:\"block\",style:{width:\"100%\",paddingLeft:\"1rem\"},children:\"ACCOUNT SETTINGS\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:updateHandler,className:classes.settingsForm,children:[/*#__PURE__*/_jsx(TextField,{required:true,label:\"First Name\",value:name,variant:\"outlined\",autoFocus:true,fullWidth:true,margin:\"normal\",onChange:function onChange(e){return setName(e.target.value);}}),/*#__PURE__*/_jsx(TextField,{required:true,type:\"email\",label:\"Email Address\",value:email,variant:\"outlined\",autoComplete:\"email\",fullWidth:true,margin:\"normal\",onChange:function onChange(e){return setEmail(e.target.value);}}),/*#__PURE__*/_jsx(TextField,{required:true,type:\"password\",label:\"Password\",value:password,variant:\"outlined\",autoComplete:\"current-password\",fullWidth:true,margin:\"normal\",onChange:function onChange(e){return setPassword(e.target.value);}}),/*#__PURE__*/_jsx(TextField,{required:true,type:\"password\",label:\"Confirm Password\",value:confirmPassword,variant:\"outlined\",autoComplete:\"current-password\",fullWidth:true,margin:\"normal\",onChange:function onChange(e){return setConfirmPassword(e.target.value);}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"secondary\",className:classes.submit,children:\"Update\"}),/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"contained\",color:\"primary\",className:classes.submit,onClick:logoutHandler,children:\"Logout\"})]})]})]});}export default SettingsScreen;","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/screens/SettingsScreen.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","Container","CssBaseline","Button","TextField","Typography","Alert","SettingsHeader","logout","updateUserProfile","getUserDetails","USER_PROFILE_UPDATE_RESET","useStyles","SettingsScreen","history","classes","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userLogin","state","userInfo","userUpdateProfile","success","updateHandler","e","preventDefault","logoutHandler","push","type","first_name","paper","width","paddingLeft","settingsForm","target","value","submit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport SettingsHeader from \"../components/SettingsHeader\";\n\nimport {\n  logout,\n  updateUserProfile,\n  getUserDetails,\n} from \"../actions/userActions\";\n\nimport { USER_PROFILE_UPDATE_RESET } from \"../constants/userConstants\";\n\nimport { useStyles } from \"../styles\";\n\nfunction SettingsScreen({ history }) {\n  const classes = useStyles();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n      dispatch(updateUserProfile(name, email, password));\n    } else {\n      setMessage(\"Passwords do not match\");\n    }\n  };\n\n  const logoutHandler = () => dispatch(logout());\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else if (success) {\n      dispatch({ type: USER_PROFILE_UPDATE_RESET });\n      dispatch(getUserDetails());\n      history.push(\"/profile\");\n    } else {\n      setName(userInfo.first_name);\n      setEmail(userInfo.email);\n    }\n  }, [dispatch, history, userInfo, success]);\n\n  return (\n    <div>\n      <SettingsHeader title=\"SETTINGS\" backTo=\"/profile\" />\n\n      <Container className={classes.paper} maxWidth=\"xs\">\n        <CssBaseline />\n        {message && <Alert severity=\"error\">{message}</Alert>}\n\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          align=\"left\"\n          display=\"block\"\n          style={{ width: \"100%\", paddingLeft: \"1rem\" }}\n        >\n          ACCOUNT SETTINGS\n        </Typography>\n\n        <form onSubmit={updateHandler} className={classes.settingsForm}>\n          <TextField\n            required\n            label=\"First Name\"\n            value={name}\n            variant=\"outlined\"\n            autoFocus\n            fullWidth\n            margin=\"normal\"\n            onChange={(e) => setName(e.target.value)}\n          ></TextField>\n\n          <TextField\n            required\n            type=\"email\"\n            label=\"Email Address\"\n            value={email}\n            variant=\"outlined\"\n            autoComplete=\"email\"\n            fullWidth\n            margin=\"normal\"\n            onChange={(e) => setEmail(e.target.value)}\n          ></TextField>\n\n          <TextField\n            required\n            type=\"password\"\n            label=\"Password\"\n            value={password}\n            variant=\"outlined\"\n            autoComplete=\"current-password\"\n            fullWidth\n            margin=\"normal\"\n            onChange={(e) => setPassword(e.target.value)}\n          ></TextField>\n\n          <TextField\n            required\n            type=\"password\"\n            label=\"Confirm Password\"\n            value={confirmPassword}\n            variant=\"outlined\"\n            autoComplete=\"current-password\"\n            fullWidth\n            margin=\"normal\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></TextField>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.submit}\n          >\n            Update\n          </Button>\n\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={logoutHandler}\n          >\n            Logout\n          </Button>\n        </form>\n      </Container>\n    </div>\n  );\n}\n\nexport default SettingsScreen;\n"]},"metadata":{},"sourceType":"module"}