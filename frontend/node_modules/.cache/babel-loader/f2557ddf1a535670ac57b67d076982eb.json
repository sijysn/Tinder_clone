{"ast":null,"code":"var _jsxFileName = \"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/screens/SettingsScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport SettingsHeader from \"../components/SettingsHeader\";\nimport { logout, updateUserProfile, getUserDetails } from \"../actions/userActions\";\nimport { USER_PROFILE_UPDATE_RESET } from \"../constants/userConstants\";\nimport { useStyles } from \"../styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SettingsScreen({\n  history\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n\n  const updateHandler = e => {\n    e.preventDefault();\n\n    if (password === confirmPassword) {\n      dispatch(updateUserProfile(name, email, password));\n    } else {\n      setMessage(\"Passwords do not match\");\n    }\n  };\n\n  const logoutHandler = () => dispatch(logout());\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else if (success) {\n      dispatch({\n        type: USER_PROFILE_UPDATE_RESET\n      });\n      dispatch(getUserDetails());\n      history.push(\"/profile\");\n    } else {\n      setName(userInfo.first_name);\n      setEmail(userInfo.email);\n    }\n  }, [dispatch, history, userInfo, success]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SettingsHeader, {\n      title: \"SETTINGS\",\n      backTo: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.paper,\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h2\",\n        variant: \"h5\",\n        align: \"left\",\n        display: \"block\",\n        style: {\n          width: \"100%\",\n          paddingLeft: \"1rem\"\n        },\n        children: \"ACCOUNT SETTINGS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: updateHandler,\n        className: classes.settingsForm,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          label: \"First Name\",\n          value: name,\n          variant: \"outlined\",\n          autoFocus: true,\n          fullWidth: true,\n          margin: \"normal\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          type: \"email\",\n          label: \"Email Address\",\n          value: email,\n          variant: \"outlined\",\n          autoComplete: \"email\",\n          fullWidth: true,\n          margin: \"normal\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          type: \"password\",\n          label: \"Password\",\n          value: password,\n          variant: \"outlined\",\n          autoComplete: \"current-password\",\n          fullWidth: true,\n          margin: \"normal\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          type: \"password\",\n          label: \"Confirm Password\",\n          value: confirmPassword,\n          variant: \"outlined\",\n          autoComplete: \"current-password\",\n          fullWidth: true,\n          margin: \"normal\",\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"secondary\",\n          className: classes.submit,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          onClick: logoutHandler,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SettingsScreen, \"mxsCECumFNN1KkNN4eVAmEfZCxM=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = SettingsScreen;\nexport default SettingsScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsScreen\");","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/screens/SettingsScreen.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","Container","CssBaseline","Button","TextField","Typography","Alert","SettingsHeader","logout","updateUserProfile","getUserDetails","USER_PROFILE_UPDATE_RESET","useStyles","SettingsScreen","history","classes","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userLogin","state","userInfo","userUpdateProfile","success","updateHandler","e","preventDefault","logoutHandler","push","type","first_name","paper","width","paddingLeft","settingsForm","target","value","submit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport SettingsHeader from \"../components/SettingsHeader\";\n\nimport {\n  logout,\n  updateUserProfile,\n  getUserDetails,\n} from \"../actions/userActions\";\n\nimport { USER_PROFILE_UPDATE_RESET } from \"../constants/userConstants\";\n\nimport { useStyles } from \"../styles\";\n\nfunction SettingsScreen({ history }) {\n  const classes = useStyles();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n      dispatch(updateUserProfile(name, email, password));\n    } else {\n      setMessage(\"Passwords do not match\");\n    }\n  };\n\n  const logoutHandler = () => dispatch(logout());\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else if (success) {\n      dispatch({ type: USER_PROFILE_UPDATE_RESET });\n      dispatch(getUserDetails());\n      history.push(\"/profile\");\n    } else {\n      setName(userInfo.first_name);\n      setEmail(userInfo.email);\n    }\n  }, [dispatch, history, userInfo, success]);\n\n  return (\n    <div>\n      <SettingsHeader title=\"SETTINGS\" backTo=\"/profile\" />\n\n      <Container className={classes.paper} maxWidth=\"xs\">\n        <CssBaseline />\n        {message && <Alert severity=\"error\">{message}</Alert>}\n\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          align=\"left\"\n          display=\"block\"\n          style={{ width: \"100%\", paddingLeft: \"1rem\" }}\n        >\n          ACCOUNT SETTINGS\n        </Typography>\n\n        <form onSubmit={updateHandler} className={classes.settingsForm}>\n          <TextField\n            required\n            label=\"First Name\"\n            value={name}\n            variant=\"outlined\"\n            autoFocus\n            fullWidth\n            margin=\"normal\"\n            onChange={(e) => setName(e.target.value)}\n          ></TextField>\n\n          <TextField\n            required\n            type=\"email\"\n            label=\"Email Address\"\n            value={email}\n            variant=\"outlined\"\n            autoComplete=\"email\"\n            fullWidth\n            margin=\"normal\"\n            onChange={(e) => setEmail(e.target.value)}\n          ></TextField>\n\n          <TextField\n            required\n            type=\"password\"\n            label=\"Password\"\n            value={password}\n            variant=\"outlined\"\n            autoComplete=\"current-password\"\n            fullWidth\n            margin=\"normal\"\n            onChange={(e) => setPassword(e.target.value)}\n          ></TextField>\n\n          <TextField\n            required\n            type=\"password\"\n            label=\"Confirm Password\"\n            value={confirmPassword}\n            variant=\"outlined\"\n            autoComplete=\"current-password\"\n            fullWidth\n            margin=\"normal\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></TextField>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.submit}\n          >\n            Update\n          </Button>\n\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={logoutHandler}\n          >\n            Logout\n          </Button>\n        </form>\n      </Container>\n    </div>\n  );\n}\n\nexport default SettingsScreen;\n"]},"metadata":{},"sourceType":"module"}