{"ast":null,"code":"var _jsxFileName = \"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/components/RecsScreen/SwipeableCards.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport SwipeableCard from \"./SwipeableCard\";\nimport Empty from \"./Empty\";\nimport { listCards } from \"../../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SwipeableCards = ({\n  cardIsEmpty\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const cardList = useSelector(state => state.cardList);\n  const {\n    loading,\n    error,\n    cards\n  } = cardList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (userInfo) {\n      dispatch(listCards());\n    }\n  }, [dispatch, userInfo]);\n  useEffect(() => {\n    if (loading === false && cards && cards.length === 0) cardIsEmpty();\n  }, [cards, cardIsEmpty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : cards && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: cards.map(person => /*#__PURE__*/_jsxDEV(SwipeableCard, {\n        person: person,\n        className: \"card\",\n        cardIsEmpty: cardIsEmpty\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SwipeableCards, \"F7XcXSuW84kpajdNvtF9gFpHmyA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = SwipeableCards;\nexport default SwipeableCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwipeableCards\");","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/components/RecsScreen/SwipeableCards.jsx"],"names":["React","useEffect","useSelector","useDispatch","Alert","SwipeableCard","Empty","listCards","SwipeableCards","cardIsEmpty","dispatch","cardList","state","loading","error","cards","userLogin","userInfo","length","map","person","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,SAASC,SAAT,QAA0B,2BAA1B;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AAC1C,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,QAAQ,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA4BJ,QAAlC;AAEA,QAAMK,SAAS,GAAGd,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACI,SAAlB,CAA7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeD,SAArB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,QAAJ,EAAc;AACZP,MAAAA,QAAQ,CAACH,SAAS,EAAV,CAAR;AACD;AACF,GAJQ,EAIN,CAACG,QAAD,EAAWO,QAAX,CAJM,CAAT;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,OAAO,KAAK,KAAZ,IAAqBE,KAArB,IAA8BA,KAAK,CAACG,MAAN,KAAiB,CAAnD,EAAsDT,WAAW;AAClE,GAFQ,EAEN,CAACM,KAAD,EAAQN,WAAR,CAFM,CAAT;AAIA,sBACE;AAAA,cACGI,OAAO,gBACN,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADM,GAEJC,KAAK,gBACP,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,OAAhB;AAAA,gBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,YADO,GAGPC,KAAK,iBACH;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACGA,KAAK,CAACI,GAAN,CAAWC,MAAD,iBACT,QAAC,aAAD;AACE,QAAA,MAAM,EAAEA,MADV;AAEE,QAAA,SAAS,EAAC,MAFZ;AAIE,QAAA,WAAW,EAAEX;AAJf,SAGOW,MAAM,CAACC,EAHd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AAPN;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAzCD;;GAAMb,c;UACaL,W,EAEAD,W,EAGCA,W;;;KANdM,c;AA2CN,eAAeA,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport SwipeableCard from \"./SwipeableCard\";\nimport Empty from \"./Empty\";\n\nimport { listCards } from \"../../actions/userActions\";\n\nconst SwipeableCards = ({ cardIsEmpty }) => {\n  const dispatch = useDispatch();\n\n  const cardList = useSelector((state) => state.cardList);\n  const { loading, error, cards } = cardList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      dispatch(listCards());\n    }\n  }, [dispatch, userInfo]);\n\n  useEffect(() => {\n    if (loading === false && cards && cards.length === 0) cardIsEmpty();\n  }, [cards, cardIsEmpty]);\n\n  return (\n    <div>\n      {loading ? (\n        <Empty />\n      ) : error ? (\n        <Alert severity=\"error\">{error}</Alert>\n      ) : (\n        cards && (\n          <div className=\"cards\">\n            {cards.map((person) => (\n              <SwipeableCard\n                person={person}\n                className=\"card\"\n                key={person.id}\n                cardIsEmpty={cardIsEmpty}\n              />\n            ))}\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default SwipeableCards;\n"]},"metadata":{},"sourceType":"module"}