{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useSelector}from\"react-redux\";import axios from\"axios\";import Box from\"@material-ui/core/Box\";import Container from\"@material-ui/core/Container\";import CssBaseline from\"@material-ui/core/CssBaseline\";import SettingsHeader from\"../components/SettingsHeader\";import PreviewCard from\"../components/PreviewCard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MessageProfilePreviewScreen(_ref){var history=_ref.history,match=_ref.match;var id=match.params.id;var _useState=useState(),_useState2=_slicedToArray(_useState,2),chatUserInfo=_useState2[0],setChatUserInfo=_useState2[1];var noUser={first_name:\"No User\"};var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;var config={headers:{\"content-type\":\"application/json\",Authorization:\"Bearer \".concat(userInfo.token)}};useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userInfo){_context.next=4;break;}history.push(\"/login\");_context.next=9;break;case 4:_context.next=6;return axios.get(\"/api/users/cards/id/\".concat(id,\"/\"),config);case 6:_yield$axios$get=_context.sent;data=_yield$axios$get.data;setChatUserInfo(data);case 9:case\"end\":return _context.stop();}}},_callee);})),[history,userInfo]);return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(Box,{my:1,children:/*#__PURE__*/_jsx(SettingsHeader,{title:\"PREVIEW\",backTo:\"/messages/\".concat(id)})}),/*#__PURE__*/_jsx(PreviewCard,{person:chatUserInfo?chatUserInfo:noUser,className:\"card__preview\"})]});}export default MessageProfilePreviewScreen;","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/screens/MessageProfilePreviewScreen.jsx"],"names":["React","useState","useEffect","useSelector","axios","Box","Container","CssBaseline","SettingsHeader","PreviewCard","MessageProfilePreviewScreen","history","match","id","params","chatUserInfo","setChatUserInfo","noUser","first_name","userLogin","state","userInfo","config","headers","Authorization","token","push","get","data"],"mappings":"yhBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CAEA,MAAOC,CAAAA,cAAP,KAA2B,8BAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,C,wFAEA,QAASC,CAAAA,2BAAT,MAAyD,IAAlBC,CAAAA,OAAkB,MAAlBA,OAAkB,CAATC,KAAS,MAATA,KAAS,CACvD,GAAMC,CAAAA,EAAE,CAAGD,KAAK,CAACE,MAAN,CAAaD,EAAxB,CADuD,cAGfZ,QAAQ,EAHO,wCAGhDc,YAHgD,eAGlCC,eAHkC,eAKvD,GAAMC,CAAAA,MAAM,CAAG,CAAEC,UAAU,CAAE,SAAd,CAAf,CAEA,GAAMC,CAAAA,SAAS,CAAGhB,WAAW,CAAC,SAACiB,KAAD,QAAWA,CAAAA,KAAK,CAACD,SAAjB,EAAD,CAA7B,CAPuD,GAQ/CE,CAAAA,QAR+C,CAQlCF,SARkC,CAQ/CE,QAR+C,CAUvD,GAAMC,CAAAA,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYH,QAAQ,CAACI,KAArB,CAFN,CADI,CAAf,CAOAvB,SAAS,sEAAC,gKACHmB,QADG,yBAENV,OAAO,CAACe,IAAR,CAAa,QAAb,EAFM,mDAIiBtB,CAAAA,KAAK,CAACuB,GAAN,+BAAiCd,EAAjC,MAAwCS,MAAxC,CAJjB,uCAIEM,IAJF,kBAIEA,IAJF,CAKNZ,eAAe,CAACY,IAAD,CAAf,CALM,sDAAD,GAON,CAACjB,OAAD,CAAUU,QAAV,CAPM,CAAT,CASA,mBACE,MAAC,SAAD,yBACE,KAAC,WAAD,IADF,cAEE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACE,KAAC,cAAD,EAAgB,KAAK,CAAC,SAAtB,CAAgC,MAAM,qBAAeR,EAAf,CAAtC,EADF,EAFF,cAME,KAAC,WAAD,EACE,MAAM,CAAEE,YAAY,CAAGA,YAAH,CAAkBE,MADxC,CAEE,SAAS,CAAC,eAFZ,EANF,GADF,CAaD,CAED,cAAeP,CAAAA,2BAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport SettingsHeader from \"../components/SettingsHeader\";\nimport PreviewCard from \"../components/PreviewCard\";\n\nfunction MessageProfilePreviewScreen({ history, match }) {\n  const id = match.params.id;\n\n  const [chatUserInfo, setChatUserInfo] = useState();\n\n  const noUser = { first_name: \"No User\" };\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const config = {\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n\n  useEffect(async () => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      const { data } = await axios.get(`/api/users/cards/id/${id}/`, config);\n      setChatUserInfo(data);\n    }\n  }, [history, userInfo]);\n\n  return (\n    <Container>\n      <CssBaseline />\n      <Box my={1}>\n        <SettingsHeader title=\"PREVIEW\" backTo={`/messages/${id}`} />\n      </Box>\n\n      <PreviewCard\n        person={chatUserInfo ? chatUserInfo : noUser}\n        className=\"card__preview\"\n      ></PreviewCard>\n    </Container>\n  );\n}\n\nexport default MessageProfilePreviewScreen;\n"]},"metadata":{},"sourceType":"module"}