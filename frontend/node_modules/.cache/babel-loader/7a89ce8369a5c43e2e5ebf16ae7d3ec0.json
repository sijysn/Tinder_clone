{"ast":null,"code":"import _slicedToArray from\"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import ScopedCssBaseline from\"@material-ui/core/ScopedCssBaseline\";import Alert from\"@material-ui/lab/Alert\";import CommonHeader from\"../components/CommonHeader\";import SwipeableCards from\"../components/RecsScreen/SwipeableCards\";import SwipeButtons from\"../components/RecsScreen/SwipeButtons\";import Empty from\"../components/RecsScreen/Empty\";import Loader from\"../components/Loader\";import{getUserDetails}from\"../actions/userActions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RecsScreen=function RecsScreen(_ref){var history=_ref.history;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isFinished=_useState2[0],setIsFinished=_useState2[1];var cardIsEmpty=function cardIsEmpty(){return setIsFinished(true);};var userLogin=useSelector(function(state){return state.userLogin;});var loading=userLogin.loading,error=userLogin.error,userInfo=userLogin.userInfo;var userDetails=useSelector(function(state){return state.userDetails;});var user=userDetails.user;var dispatch=useDispatch();useEffect(function(){if(!userInfo){history.push(\"/login\");}else if(!user){dispatch(getUserDetails());}},[history,userInfo,user]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CommonHeader,{recs:true}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:message}):userInfo&&/*#__PURE__*/_jsxs(ScopedCssBaseline,{children:[isFinished?/*#__PURE__*/_jsx(Empty,{}):/*#__PURE__*/_jsx(SwipeableCards,{cardIsEmpty:cardIsEmpty}),/*#__PURE__*/_jsx(SwipeButtons,{cardIsEmpty:cardIsEmpty})]})]});};export default RecsScreen;","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/screens/RecsScreen.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","ScopedCssBaseline","Alert","CommonHeader","SwipeableCards","SwipeButtons","Empty","Loader","getUserDetails","RecsScreen","history","isFinished","setIsFinished","cardIsEmpty","userLogin","state","loading","error","userInfo","userDetails","user","dispatch","push","message"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,MAAOC,CAAAA,iBAAP,KAA8B,qCAA9B,CACA,MAAOC,CAAAA,KAAP,KAAkB,wBAAlB,CAEA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,yCAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,uCAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gCAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CAEA,OAASC,cAAT,KAA+B,wBAA/B,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,eACEb,QAAQ,CAAC,KAAD,CADV,wCAC3Bc,UAD2B,eACfC,aADe,eAGlC,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMD,CAAAA,aAAa,CAAC,IAAD,CAAnB,EAApB,CAEA,GAAME,CAAAA,SAAS,CAAGf,WAAW,CAAC,SAACgB,KAAD,QAAWA,CAAAA,KAAK,CAACD,SAAjB,EAAD,CAA7B,CALkC,GAM1BE,CAAAA,OAN0B,CAMGF,SANH,CAM1BE,OAN0B,CAMjBC,KANiB,CAMGH,SANH,CAMjBG,KANiB,CAMVC,QANU,CAMGJ,SANH,CAMVI,QANU,CAQlC,GAAMC,CAAAA,WAAW,CAAGpB,WAAW,CAAC,SAACgB,KAAD,QAAWA,CAAAA,KAAK,CAACI,WAAjB,EAAD,CAA/B,CARkC,GAS1BC,CAAAA,IAT0B,CASjBD,WATiB,CAS1BC,IAT0B,CAWlC,GAAMC,CAAAA,QAAQ,CAAGrB,WAAW,EAA5B,CAEAF,SAAS,CAAC,UAAM,CACd,GAAI,CAACoB,QAAL,CAAe,CACbR,OAAO,CAACY,IAAR,CAAa,QAAb,EACD,CAFD,IAEO,IAAI,CAACF,IAAL,CAAW,CAChBC,QAAQ,CAACb,cAAc,EAAf,CAAR,CACD,CACF,CANQ,CAMN,CAACE,OAAD,CAAUQ,QAAV,CAAoBE,IAApB,CANM,CAAT,CAQA,mBACE,oCACE,KAAC,YAAD,EAAc,IAAI,KAAlB,EADF,CAEGJ,OAAO,cACN,KAAC,MAAD,IADM,CAEJC,KAAK,cACP,KAAC,KAAD,EAAO,QAAQ,CAAC,OAAhB,UAAyBM,OAAzB,EADO,CAGPL,QAAQ,eACN,MAAC,iBAAD,YACGP,UAAU,cACT,KAAC,KAAD,IADS,cAGT,KAAC,cAAD,EAAgB,WAAW,CAAEE,WAA7B,EAJJ,cAME,KAAC,YAAD,EAAc,WAAW,CAAEA,WAA3B,EANF,GARN,GADF,CAqBD,CA1CD,CA4CA,cAAeJ,CAAAA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport ScopedCssBaseline from \"@material-ui/core/ScopedCssBaseline\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport CommonHeader from \"../components/CommonHeader\";\nimport SwipeableCards from \"../components/RecsScreen/SwipeableCards\";\nimport SwipeButtons from \"../components/RecsScreen/SwipeButtons\";\nimport Empty from \"../components/RecsScreen/Empty\";\nimport Loader from \"../components/Loader\";\n\nimport { getUserDetails } from \"../actions/userActions\";\n\nconst RecsScreen = ({ history }) => {\n  const [isFinished, setIsFinished] = useState(false);\n\n  const cardIsEmpty = () => setIsFinished(true);\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { user } = userDetails;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else if (!user) {\n      dispatch(getUserDetails());\n    }\n  }, [history, userInfo, user]);\n\n  return (\n    <div>\n      <CommonHeader recs />\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Alert severity=\"error\">{message}</Alert>\n      ) : (\n        userInfo && (\n          <ScopedCssBaseline>\n            {isFinished ? (\n              <Empty />\n            ) : (\n              <SwipeableCards cardIsEmpty={cardIsEmpty} />\n            )}\n            <SwipeButtons cardIsEmpty={cardIsEmpty} />\n          </ScopedCssBaseline>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default RecsScreen;\n"]},"metadata":{},"sourceType":"module"}