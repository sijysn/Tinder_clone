{"ast":null,"code":"import React,{useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import Alert from\"@material-ui/lab/Alert\";import SwipeableCard from\"./SwipeableCard\";import Empty from\"./Empty\";import{listCards}from\"../../actions/userActions\";import{jsx as _jsx}from\"react/jsx-runtime\";var SwipeableCards=function SwipeableCards(_ref){var cardIsEmpty=_ref.cardIsEmpty;var dispatch=useDispatch();var cardList=useSelector(function(state){return state.cardList;});var loading=cardList.loading,error=cardList.error,cards=cardList.cards;var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;useEffect(function(){if(userInfo){dispatch(listCards());}},[dispatch,userInfo]);useEffect(function(){if(loading===false&&cards&&cards.length===0)cardIsEmpty();},[cards,cardIsEmpty]);return/*#__PURE__*/_jsx(\"div\",{children:loading?/*#__PURE__*/_jsx(Empty,{}):error?/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:error}):cards&&/*#__PURE__*/_jsx(\"div\",{className:\"cards\",children:cards.map(function(person){return/*#__PURE__*/_jsx(SwipeableCard,{person:person,className:\"card\",cardIsEmpty:cardIsEmpty},person.id);})})});};export default SwipeableCards;","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/components/RecsScreen/SwipeableCards.jsx"],"names":["React","useEffect","useSelector","useDispatch","Alert","SwipeableCard","Empty","listCards","SwipeableCards","cardIsEmpty","dispatch","cardList","state","loading","error","cards","userLogin","userInfo","length","map","person","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,MAAOC,CAAAA,KAAP,KAAkB,wBAAlB,CAEA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA,OAASC,SAAT,KAA0B,2BAA1B,C,2CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAqB,IAAlBC,CAAAA,WAAkB,MAAlBA,WAAkB,CAC1C,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEA,GAAMQ,CAAAA,QAAQ,CAAGT,WAAW,CAAC,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACD,QAAjB,EAAD,CAA5B,CAH0C,GAIlCE,CAAAA,OAJkC,CAIRF,QAJQ,CAIlCE,OAJkC,CAIzBC,KAJyB,CAIRH,QAJQ,CAIzBG,KAJyB,CAIlBC,KAJkB,CAIRJ,QAJQ,CAIlBI,KAJkB,CAM1C,GAAMC,CAAAA,SAAS,CAAGd,WAAW,CAAC,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACI,SAAjB,EAAD,CAA7B,CAN0C,GAOlCC,CAAAA,QAPkC,CAOrBD,SAPqB,CAOlCC,QAPkC,CAS1ChB,SAAS,CAAC,UAAM,CACd,GAAIgB,QAAJ,CAAc,CACZP,QAAQ,CAACH,SAAS,EAAV,CAAR,CACD,CACF,CAJQ,CAIN,CAACG,QAAD,CAAWO,QAAX,CAJM,CAAT,CAMAhB,SAAS,CAAC,UAAM,CACd,GAAIY,OAAO,GAAK,KAAZ,EAAqBE,KAArB,EAA8BA,KAAK,CAACG,MAAN,GAAiB,CAAnD,CAAsDT,WAAW,GAClE,CAFQ,CAEN,CAACM,KAAD,CAAQN,WAAR,CAFM,CAAT,CAIA,mBACE,qBACGI,OAAO,cACN,KAAC,KAAD,IADM,CAEJC,KAAK,cACP,KAAC,KAAD,EAAO,QAAQ,CAAC,OAAhB,UAAyBA,KAAzB,EADO,CAGPC,KAAK,eACH,YAAK,SAAS,CAAC,OAAf,UACGA,KAAK,CAACI,GAAN,CAAU,SAACC,MAAD,qBACT,KAAC,aAAD,EACE,MAAM,CAAEA,MADV,CAEE,SAAS,CAAC,MAFZ,CAIE,WAAW,CAAEX,WAJf,EAGOW,MAAM,CAACC,EAHd,CADS,EAAV,CADH,EAPN,EADF,CAsBD,CAzCD,CA2CA,cAAeb,CAAAA,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport SwipeableCard from \"./SwipeableCard\";\nimport Empty from \"./Empty\";\n\nimport { listCards } from \"../../actions/userActions\";\n\nconst SwipeableCards = ({ cardIsEmpty }) => {\n  const dispatch = useDispatch();\n\n  const cardList = useSelector((state) => state.cardList);\n  const { loading, error, cards } = cardList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      dispatch(listCards());\n    }\n  }, [dispatch, userInfo]);\n\n  useEffect(() => {\n    if (loading === false && cards && cards.length === 0) cardIsEmpty();\n  }, [cards, cardIsEmpty]);\n\n  return (\n    <div>\n      {loading ? (\n        <Empty />\n      ) : error ? (\n        <Alert severity=\"error\">{error}</Alert>\n      ) : (\n        cards && (\n          <div className=\"cards\">\n            {cards.map((person) => (\n              <SwipeableCard\n                person={person}\n                className=\"card\"\n                key={person.id}\n                cardIsEmpty={cardIsEmpty}\n              />\n            ))}\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default SwipeableCards;\n"]},"metadata":{},"sourceType":"module"}