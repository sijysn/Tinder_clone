{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import axios from\"axios\";import Box from\"@material-ui/core/Box\";import IconButton from\"@material-ui/core/IconButton\";import ReplayIcon from\"@material-ui/icons/Replay\";import CloseIcon from\"@material-ui/icons/Close\";import StarRateIcon from\"@material-ui/icons/StarRate\";import FavoriteIcon from\"@material-ui/icons/Favorite\";import FlashOnIcon from\"@material-ui/icons/FlashOn\";import{onBlock,offBlock}from\"../../actions/blockActions\";import createChatRoom from\"../../functions/createChatRoom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SwipeButtons=function SwipeButtons(_ref){var cardIsEmpty=_ref.cardIsEmpty;var dispatch=useDispatch();var cardList=useSelector(function(state){return state.cardList;});var loading=cardList.loading,cards=cardList.cards;var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;var config={headers:{\"content-type\":\"application/json\",Authorization:\"Bearer \".concat(userInfo.token)}};var isBlocked=useSelector(function(state){return state.isBlocked;});useEffect(function(){if(loading===false&&cards&&cards.length>0){dispatch(offBlock());}},[dispatch,loading]);var swipeCard=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(likeOrNope){var target,nextTarget;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!isBlocked){_context.next=2;break;}return _context.abrupt(\"return\");case 2:target=document.getElementsByClassName(\"card\")[0];nextTarget=document.getElementsByClassName(\"card\")[1];dispatch(onBlock());// Show LIKE or NOPE\ndocument.getElementsByClassName(\"card__\".concat(likeOrNope))[0].style.opacity=1;// Add animation of LIKE or NOPE\nsetTimeout(function(){return target.classList.add(likeOrNope);},100);// Remove the swiped Card\nsetTimeout(function(){return target.remove();},600);// React by LIKE or NOPE\n_context.next=10;return axios.post(\"/api/reactions/swipe/\",{fromUserId:userInfo.id,toUserId:Number(target.id),status:likeOrNope===\"like\"?\"L\":\"N\"},config);case 10:// If match, create chat room and chat room users\nif(likeOrNope===\"like\"){createChatRoom(userInfo.id,target.id,config);}// If all Cards have been swiped, show Empty component\nif(nextTarget===undefined){setTimeout(function(){return cardIsEmpty();},600);dispatch(onBlock());}else{setTimeout(function(){return dispatch(offBlock());},600);}case 12:case\"end\":return _context.stop();}}},_callee);}));return function swipeCard(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Box,{className:\"swipe-btns__container\",children:/*#__PURE__*/_jsxs(Box,{className:\"swipe-btns max-width\",children:[/*#__PURE__*/_jsx(IconButton,{className:\"swipe-btns__back\",disabled:isBlocked,children:/*#__PURE__*/_jsx(ReplayIcon,{fontSize:\"large\"})}),/*#__PURE__*/_jsx(IconButton,{className:\"swipe-btns__dislike\",disabled:isBlocked,onClick:function onClick(){swipeCard(\"nope\");},children:/*#__PURE__*/_jsx(CloseIcon,{fontSize:\"large\"})}),/*#__PURE__*/_jsx(IconButton,{className:\"swipe-btns__super-like\",disabled:isBlocked,children:/*#__PURE__*/_jsx(StarRateIcon,{fontSize:\"large\"})}),/*#__PURE__*/_jsx(IconButton,{className:\"swipe-btns__like\",disabled:isBlocked,onClick:function onClick(){swipeCard(\"like\");},children:/*#__PURE__*/_jsx(FavoriteIcon,{fontSize:\"large\"})}),/*#__PURE__*/_jsx(IconButton,{className:\"swipe-btns__boost\",disabled:isBlocked,children:/*#__PURE__*/_jsx(FlashOnIcon,{fontSize:\"large\"})})]})});};export default SwipeButtons;","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/components/RecsScreen/SwipeButtons.jsx"],"names":["React","useEffect","useSelector","useDispatch","axios","Box","IconButton","ReplayIcon","CloseIcon","StarRateIcon","FavoriteIcon","FlashOnIcon","onBlock","offBlock","createChatRoom","SwipeButtons","cardIsEmpty","dispatch","cardList","state","loading","cards","userLogin","userInfo","config","headers","Authorization","token","isBlocked","length","swipeCard","likeOrNope","target","document","getElementsByClassName","nextTarget","style","opacity","setTimeout","classList","add","remove","post","fromUserId","id","toUserId","Number","status","undefined"],"mappings":"qWAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,6BAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,6BAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CAEA,OAASC,OAAT,CAAkBC,QAAlB,KAAkC,4BAAlC,CAEA,MAAOC,CAAAA,cAAP,KAA2B,gCAA3B,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAqB,IAAlBC,CAAAA,WAAkB,MAAlBA,WAAkB,CACxC,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAEA,GAAMe,CAAAA,QAAQ,CAAGhB,WAAW,CAAC,SAACiB,KAAD,QAAWA,CAAAA,KAAK,CAACD,QAAjB,EAAD,CAA5B,CAHwC,GAIhCE,CAAAA,OAJgC,CAIbF,QAJa,CAIhCE,OAJgC,CAIvBC,KAJuB,CAIbH,QAJa,CAIvBG,KAJuB,CAMxC,GAAMC,CAAAA,SAAS,CAAGpB,WAAW,CAAC,SAACiB,KAAD,QAAWA,CAAAA,KAAK,CAACG,SAAjB,EAAD,CAA7B,CANwC,GAOhCC,CAAAA,QAPgC,CAOnBD,SAPmB,CAOhCC,QAPgC,CASxC,GAAMC,CAAAA,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYH,QAAQ,CAACI,KAArB,CAFN,CADI,CAAf,CAOA,GAAMC,CAAAA,SAAS,CAAG1B,WAAW,CAAC,SAACiB,KAAD,QAAWA,CAAAA,KAAK,CAACS,SAAjB,EAAD,CAA7B,CAEA3B,SAAS,CAAC,UAAM,CACd,GAAImB,OAAO,GAAK,KAAZ,EAAqBC,KAArB,EAA8BA,KAAK,CAACQ,MAAN,CAAe,CAAjD,CAAoD,CAClDZ,QAAQ,CAACJ,QAAQ,EAAT,CAAR,CACD,CACF,CAJQ,CAIN,CAACI,QAAD,CAAWG,OAAX,CAJM,CAAT,CAMA,GAAMU,CAAAA,SAAS,2FAAG,iBAAOC,UAAP,4IACZH,SADY,iEAGVI,MAHU,CAGDC,QAAQ,CAACC,sBAAT,CAAgC,MAAhC,EAAwC,CAAxC,CAHC,CAIVC,UAJU,CAIGF,QAAQ,CAACC,sBAAT,CAAgC,MAAhC,EAAwC,CAAxC,CAJH,CAMhBjB,QAAQ,CAACL,OAAO,EAAR,CAAR,CAEA;AACAqB,QAAQ,CAACC,sBAAT,iBAAyCH,UAAzC,GAAuD,CAAvD,EAA0DK,KAA1D,CAAgEC,OAAhE,CAA0E,CAA1E,CAEA;AACAC,UAAU,CAAC,iBAAMN,CAAAA,MAAM,CAACO,SAAP,CAAiBC,GAAjB,CAAqBT,UAArB,CAAN,EAAD,CAAyC,GAAzC,CAAV,CAEA;AACAO,UAAU,CAAC,iBAAMN,CAAAA,MAAM,CAACS,MAAP,EAAN,EAAD,CAAwB,GAAxB,CAAV,CAEA;AAjBgB,uBAkBVrC,CAAAA,KAAK,CAACsC,IAAN,CACJ,uBADI,CAEJ,CACEC,UAAU,CAAEpB,QAAQ,CAACqB,EADvB,CAEEC,QAAQ,CAAEC,MAAM,CAACd,MAAM,CAACY,EAAR,CAFlB,CAGEG,MAAM,CAAEhB,UAAU,GAAK,MAAf,CAAwB,GAAxB,CAA8B,GAHxC,CAFI,CAOJP,MAPI,CAlBU,SA4BhB;AACA,GAAIO,UAAU,GAAK,MAAnB,CAA2B,CACzBjB,cAAc,CAACS,QAAQ,CAACqB,EAAV,CAAcZ,MAAM,CAACY,EAArB,CAAyBpB,MAAzB,CAAd,CACD,CAED;AACA,GAAIW,UAAU,GAAKa,SAAnB,CAA8B,CAC5BV,UAAU,CAAC,iBAAMtB,CAAAA,WAAW,EAAjB,EAAD,CAAsB,GAAtB,CAAV,CACAC,QAAQ,CAACL,OAAO,EAAR,CAAR,CACD,CAHD,IAGO,CACL0B,UAAU,CAAC,iBAAMrB,CAAAA,QAAQ,CAACJ,QAAQ,EAAT,CAAd,EAAD,CAA6B,GAA7B,CAAV,CACD,CAvCe,uDAAH,kBAATiB,CAAAA,SAAS,6CAAf,CA0CA,mBACE,KAAC,GAAD,EAAK,SAAS,CAAC,uBAAf,uBACE,MAAC,GAAD,EAAK,SAAS,CAAC,sBAAf,wBACE,KAAC,UAAD,EAAY,SAAS,CAAC,kBAAtB,CAAyC,QAAQ,CAAEF,SAAnD,uBACE,KAAC,UAAD,EAAY,QAAQ,CAAC,OAArB,EADF,EADF,cAKE,KAAC,UAAD,EACE,SAAS,CAAC,qBADZ,CAEE,QAAQ,CAAEA,SAFZ,CAGE,OAAO,CAAE,kBAAM,CACbE,SAAS,CAAC,MAAD,CAAT,CACD,CALH,uBAOE,KAAC,SAAD,EAAW,QAAQ,CAAC,OAApB,EAPF,EALF,cAeE,KAAC,UAAD,EAAY,SAAS,CAAC,wBAAtB,CAA+C,QAAQ,CAAEF,SAAzD,uBACE,KAAC,YAAD,EAAc,QAAQ,CAAC,OAAvB,EADF,EAfF,cAmBE,KAAC,UAAD,EACE,SAAS,CAAC,kBADZ,CAEE,QAAQ,CAAEA,SAFZ,CAGE,OAAO,CAAE,kBAAM,CACbE,SAAS,CAAC,MAAD,CAAT,CACD,CALH,uBAOE,KAAC,YAAD,EAAc,QAAQ,CAAC,OAAvB,EAPF,EAnBF,cA6BE,KAAC,UAAD,EAAY,SAAS,CAAC,mBAAtB,CAA0C,QAAQ,CAAEF,SAApD,uBACE,KAAC,WAAD,EAAa,QAAQ,CAAC,OAAtB,EADF,EA7BF,GADF,EADF,CAqCD,CAvGD,CAyGA,cAAeb,CAAAA,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\n\nimport { onBlock, offBlock } from \"../../actions/blockActions\";\n\nimport createChatRoom from \"../../functions/createChatRoom\";\n\nconst SwipeButtons = ({ cardIsEmpty }) => {\n  const dispatch = useDispatch();\n\n  const cardList = useSelector((state) => state.cardList);\n  const { loading, cards } = cardList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const config = {\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n\n  const isBlocked = useSelector((state) => state.isBlocked);\n\n  useEffect(() => {\n    if (loading === false && cards && cards.length > 0) {\n      dispatch(offBlock());\n    }\n  }, [dispatch, loading]);\n\n  const swipeCard = async (likeOrNope) => {\n    if (isBlocked) return;\n\n    const target = document.getElementsByClassName(\"card\")[0];\n    const nextTarget = document.getElementsByClassName(\"card\")[1];\n\n    dispatch(onBlock());\n\n    // Show LIKE or NOPE\n    document.getElementsByClassName(`card__${likeOrNope}`)[0].style.opacity = 1;\n\n    // Add animation of LIKE or NOPE\n    setTimeout(() => target.classList.add(likeOrNope), 100);\n\n    // Remove the swiped Card\n    setTimeout(() => target.remove(), 600);\n\n    // React by LIKE or NOPE\n    await axios.post(\n      \"/api/reactions/swipe/\",\n      {\n        fromUserId: userInfo.id,\n        toUserId: Number(target.id),\n        status: likeOrNope === \"like\" ? \"L\" : \"N\",\n      },\n      config\n    );\n\n    // If match, create chat room and chat room users\n    if (likeOrNope === \"like\") {\n      createChatRoom(userInfo.id, target.id, config);\n    }\n\n    // If all Cards have been swiped, show Empty component\n    if (nextTarget === undefined) {\n      setTimeout(() => cardIsEmpty(), 600);\n      dispatch(onBlock());\n    } else {\n      setTimeout(() => dispatch(offBlock()), 600);\n    }\n  };\n\n  return (\n    <Box className=\"swipe-btns__container\">\n      <Box className=\"swipe-btns max-width\">\n        <IconButton className=\"swipe-btns__back\" disabled={isBlocked}>\n          <ReplayIcon fontSize=\"large\" />\n        </IconButton>\n\n        <IconButton\n          className=\"swipe-btns__dislike\"\n          disabled={isBlocked}\n          onClick={() => {\n            swipeCard(\"nope\");\n          }}\n        >\n          <CloseIcon fontSize=\"large\" />\n        </IconButton>\n\n        <IconButton className=\"swipe-btns__super-like\" disabled={isBlocked}>\n          <StarRateIcon fontSize=\"large\" />\n        </IconButton>\n\n        <IconButton\n          className=\"swipe-btns__like\"\n          disabled={isBlocked}\n          onClick={() => {\n            swipeCard(\"like\");\n          }}\n        >\n          <FavoriteIcon fontSize=\"large\" />\n        </IconButton>\n\n        <IconButton className=\"swipe-btns__boost\" disabled={isBlocked}>\n          <FlashOnIcon fontSize=\"large\" />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SwipeButtons;\n"]},"metadata":{},"sourceType":"module"}