{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useSelector}from\"react-redux\";import axios from\"axios\";import Box from\"@material-ui/core/Box\";import Grid from\"@material-ui/core/Grid\";import Avatar from\"@material-ui/core/Avatar\";import FavoriteIcon from\"@material-ui/icons/Favorite\";import FavoriteBorderIcon from\"@material-ui/icons/FavoriteBorder\";import MessageHeader from\"../components/MessageScreen/MessageHeader\";import MessageFooter from\"../components/MessageScreen/MessageFooter\";import MessageBubble from\"../components/MessageScreen/MessageBubble\";import Loader from\"../components/Loader\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MessageScreen(_ref){var match=_ref.match,history=_ref.history;var _useState=useState(),_useState2=_slicedToArray(_useState,2),chatUserInfo=_useState2[0],setChatUserInfo=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var chatUserId=match.params.id;var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),messages=_useState6[0],setMessages=_useState6[1];var config={headers:{\"content-type\":\"application/json\",Authorization:\"Bearer \".concat(userInfo.token)}};var goodHandler=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(message){var targetMessage,_messages;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.put(\"/api/messages/good/update/\".concat(message.id,\"/\"),{},config);case 2:targetMessage=_context.sent;if(!targetMessage){_context.next=8;break;}_context.next=6;return axios.get(\"/api/messages/\".concat(userInfo.id,\"/\").concat(chatUserId,\"/\"),config);case 6:_messages=_context.sent;setMessages(_messages.data);case 8:case\"end\":return _context.stop();}}},_callee);}));return function goodHandler(_x){return _ref2.apply(this,arguments);};}();useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(userInfo){_context2.next=4;break;}history.push(\"/login\");_context2.next=10;break;case 4:if(chatUserInfo){_context2.next=10;break;}_context2.next=7;return axios.get(\"/api/users/cards/id/\".concat(chatUserId,\"/\"),config);case 7:_yield$axios$get=_context2.sent;data=_yield$axios$get.data;setChatUserInfo(data);case 10:case\"end\":return _context2.stop();}}},_callee2);})),[history,userInfo,chatUserInfo]);useEffect(function(){setLoading(true);var isMounted=true;setInterval(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _messages;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!isMounted){_context3.next=8;break;}_context3.next=3;return axios.get(\"/api/messages/\".concat(userInfo.id,\"/\").concat(chatUserId),config);case 3:_messages=_context3.sent;setMessages(_messages.data);_context3.next=7;return axios.put(\"/api/messages/read/\",{messages:JSON.stringify(_messages.data),fromUserId:userInfo.id},config);case 7:setLoading(false);case 8:case\"end\":return _context3.stop();}}},_callee3);})),1000);return function(){return isMounted=false;};},[]);return/*#__PURE__*/_jsx(Box,{children:loading?/*#__PURE__*/_jsx(Loader,{style:{marginTop:\"50vh\"}}):/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(MessageHeader,{chatUserInfo:chatUserInfo&&chatUserInfo}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",spacing:1,style:{overflowY:\"scroll\",maxHeight:\"100vh\",padding:\"9rem 1rem 20rem\",flexWrap:\"nowrap\",zIndex:\"-1\"},className:\"max-width\",children:[messages.length>0&&messages.map(function(message){return/*#__PURE__*/_jsx(Grid,{item:true,style:{position:\"relative\",width:\"100%\"},children:message.user_id==chatUserId?/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"flex-start\",mr:5,children:[/*#__PURE__*/_jsx(Avatar,{src:chatUserInfo?chatUserInfo.image:\"/images/unknown.png\",alt:\"Profile Photo\",style:{height:\"3rem\",width:\"3rem\",marginRight:\"1rem\"}}),/*#__PURE__*/_jsx(MessageBubble,{bgColor:\"#dddddd\",color:\"#000\",text:message.text}),/*#__PURE__*/_jsx(Box,{position:\"absolute\",right:\"1rem\",top:\"50%\",style:{transform:\"translateY(-50%)\"},children:message.good?/*#__PURE__*/_jsx(FavoriteIcon,{onClick:function onClick(){return goodHandler(message);},style:{color:\"#f50057\"}}):/*#__PURE__*/_jsx(FavoriteBorderIcon,{onClick:function onClick(){return goodHandler(message);}})})]}):/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"flex-end\",ml:5,children:[message.good&&/*#__PURE__*/_jsx(FavoriteIcon,{fontSize:\"small\",style:{color:\"#f50057\"}}),/*#__PURE__*/_jsx(MessageBubble,{bgColor:\"#46b3e6\",color:\"#fff\",text:message.text})]})},message.id);}),messages.length===0&&/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Box,{height:\"100vh\"})}),/*#__PURE__*/_jsx(Box,{id:\"latest_message\",visibility:\"hidden\",children:\"latest message\"})]}),/*#__PURE__*/_jsx(MessageFooter,{chatUserId:chatUserId,setMessages:setMessages})]})});}export default MessageScreen;","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/screens/MessageScreen.jsx"],"names":["React","useState","useEffect","useSelector","axios","Box","Grid","Avatar","FavoriteIcon","FavoriteBorderIcon","MessageHeader","MessageFooter","MessageBubble","Loader","MessageScreen","match","history","chatUserInfo","setChatUserInfo","loading","setLoading","chatUserId","params","id","userLogin","state","userInfo","messages","setMessages","config","headers","Authorization","token","goodHandler","message","put","targetMessage","get","_messages","data","push","isMounted","setInterval","JSON","stringify","fromUserId","marginTop","overflowY","maxHeight","padding","flexWrap","zIndex","length","map","position","width","user_id","image","height","marginRight","text","transform","good","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\n\nimport MessageHeader from \"../components/MessageScreen/MessageHeader\";\nimport MessageFooter from \"../components/MessageScreen/MessageFooter\";\nimport MessageBubble from \"../components/MessageScreen/MessageBubble\";\nimport Loader from \"../components/Loader\";\n\nfunction MessageScreen({ match, history }) {\n  const [chatUserInfo, setChatUserInfo] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const chatUserId = match.params.id;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const [messages, setMessages] = useState([]);\n\n  const config = {\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n\n  const goodHandler = async (message) => {\n    const targetMessage = await axios.put(\n      `/api/messages/good/update/${message.id}/`,\n      {},\n      config\n    );\n\n    if (targetMessage) {\n      const _messages = await axios.get(\n        `/api/messages/${userInfo.id}/${chatUserId}/`,\n        config\n      );\n\n      setMessages(_messages.data);\n    }\n  };\n\n  useEffect(async () => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else if (!chatUserInfo) {\n      const { data } = await axios.get(\n        `/api/users/cards/id/${chatUserId}/`,\n        config\n      );\n\n      setChatUserInfo(data);\n    }\n  }, [history, userInfo, chatUserInfo]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    let isMounted = true;\n\n    setInterval(async () => {\n      if (isMounted) {\n        const _messages = await axios.get(\n          `/api/messages/${userInfo.id}/${chatUserId}`,\n          config\n        );\n\n        setMessages(_messages.data);\n\n        await axios.put(\n          \"/api/messages/read/\",\n          {\n            messages: JSON.stringify(_messages.data),\n            fromUserId: userInfo.id,\n          },\n          config\n        );\n\n        setLoading(false);\n      }\n    }, 1000);\n\n    return () => (isMounted = false);\n  }, []);\n\n  return (\n    <Box>\n      {loading ? (\n        <Loader style={{ marginTop: \"50vh\" }} />\n      ) : (\n        <Box>\n          <MessageHeader chatUserInfo={chatUserInfo && chatUserInfo} />\n\n          <Grid\n            container\n            direction=\"column\"\n            spacing={1}\n            style={{\n              overflowY: \"scroll\",\n              maxHeight: \"100vh\",\n              padding: \"9rem 1rem 20rem\",\n              flexWrap: \"nowrap\",\n              zIndex: \"-1\",\n            }}\n            className=\"max-width\"\n          >\n            {messages.length > 0 &&\n              messages.map((message) => (\n                <Grid\n                  item\n                  key={message.id}\n                  style={{\n                    position: \"relative\",\n                    width: \"100%\",\n                  }}\n                >\n                  {message.user_id == chatUserId ? (\n                    <Box display=\"flex\" justifyContent=\"flex-start\" mr={5}>\n                      <Avatar\n                        src={\n                          chatUserInfo\n                            ? chatUserInfo.image\n                            : \"/images/unknown.png\"\n                        }\n                        alt=\"Profile Photo\"\n                        style={{\n                          height: \"3rem\",\n                          width: \"3rem\",\n                          marginRight: \"1rem\",\n                        }}\n                      ></Avatar>\n\n                      <MessageBubble\n                        bgColor=\"#dddddd\"\n                        color=\"#000\"\n                        text={message.text}\n                      />\n\n                      <Box\n                        position=\"absolute\"\n                        right=\"1rem\"\n                        top=\"50%\"\n                        style={{ transform: \"translateY(-50%)\" }}\n                      >\n                        {message.good ? (\n                          <FavoriteIcon\n                            onClick={() => goodHandler(message)}\n                            style={{ color: \"#f50057\" }}\n                          ></FavoriteIcon>\n                        ) : (\n                          <FavoriteBorderIcon\n                            onClick={() => goodHandler(message)}\n                          ></FavoriteBorderIcon>\n                        )}\n                      </Box>\n                    </Box>\n                  ) : (\n                    <Box display=\"flex\" justifyContent=\"flex-end\" ml={5}>\n                      {message.good && (\n                        <FavoriteIcon\n                          fontSize=\"small\"\n                          style={{ color: \"#f50057\" }}\n                        ></FavoriteIcon>\n                      )}\n                      <MessageBubble\n                        bgColor=\"#46b3e6\"\n                        color=\"#fff\"\n                        text={message.text}\n                      />\n                    </Box>\n                  )}\n                </Grid>\n              ))}\n            {messages.length === 0 && (\n              <Box>\n                <Box height=\"100vh\"></Box>\n              </Box>\n            )}\n            <Box id=\"latest_message\" visibility=\"hidden\">\n              latest message\n            </Box>\n          </Grid>\n          <MessageFooter chatUserId={chatUserId} setMessages={setMessages} />\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default MessageScreen;\n"]},"metadata":{},"sourceType":"module"}