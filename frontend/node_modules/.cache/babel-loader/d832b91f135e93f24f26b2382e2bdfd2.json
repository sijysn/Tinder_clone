{"ast":null,"code":"var _jsxFileName = \"/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/screens/ProfileEditScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Loader from \"../components/Loader\";\nimport SettingsHeader from \"../components/SettingsHeader\";\nimport ProfilePhotoUploader from \"../components/ProfilePhotoUploader\";\nimport { updateUserDetails, getUserDetails, listCards } from \"../actions/userActions\";\nimport { USER_DETAILS_UPDATE_RESET } from \"../constants/userConstants\";\nimport { genderIdentities, sexualPreferences } from \"../constants/genderConstants\";\nimport { useStyles } from \"../styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileEditScreen({\n  history\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [profession, setProfession] = useState(\"\");\n  const [selfIntroduction, setSelfIntroduction] = useState(\"\");\n  const [genderIdentity, setGenderIdentity] = useState(\"Male\");\n  const [inputGenderIdentity, setInputGenderIdentity] = useState(\"Male\");\n  const [sexualPreference, setSexualPreference] = useState(\"All\");\n  const [inputSexualPreference, setInputSexualPreference] = useState(\"All\");\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdateDetails = useSelector(state => state.userUpdateDetails);\n  const {\n    success\n  } = userUpdateDetails;\n\n  const updateHandler = e => {\n    e.preventDefault();\n    dispatch(updateUserDetails(profession, selfIntroduction, genderIdentity, sexualPreference));\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else if (!user) {\n      dispatch(getUserDetails());\n    } else if (success) {\n      dispatch({\n        type: USER_DETAILS_UPDATE_RESET\n      });\n      dispatch(listCards());\n      dispatch(getUserDetails());\n      history.push(\"/profile\");\n    } else {\n      setProfession(user.profession ? user.profession : \"\");\n      setSelfIntroduction(user.self_introduction ? user.self_introduction : \"\");\n      setGenderIdentity(user.gender_identity);\n      setInputGenderIdentity(user.gender_identity);\n      setSexualPreference(user.sexual_preference);\n      setInputSexualPreference(user.sexual_preference);\n    }\n  }, [dispatch, history, userInfo, user, success]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SettingsHeader, {\n      title: \"EDITINGS\",\n      backTo: \"/profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 1,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this) : error ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this) : user && /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          maxHeight: \"100vh\",\n          pb: \"5rem\",\n          style: {\n            overflowY: \"scroll\",\n            flexWrap: \"nowrap\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(ProfilePhotoUploader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: updateHandler,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Profession\",\n              value: profession,\n              variant: \"outlined\",\n              autoFocus: true,\n              fullWidth: true,\n              margin: \"normal\",\n              multiline: true,\n              onChange: e => setProfession(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Self Introduction\",\n              value: selfIntroduction,\n              variant: \"outlined\",\n              fullWidth: true,\n              margin: \"normal\",\n              multiline: true,\n              onChange: e => setSelfIntroduction(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n              fullWidth: true,\n              options: genderIdentities,\n              value: genderIdentity,\n              onChange: (e, newValue) => setGenderIdentity(newValue),\n              inputValue: inputGenderIdentity,\n              onInputChange: (e, newInputValue) => setInputGenderIdentity(newInputValue),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Gender Identity\",\n                variant: \"outlined\",\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n              fullWidth: true,\n              options: sexualPreferences,\n              value: sexualPreference,\n              onChange: (e, newValue) => setSexualPreference(newValue),\n              inputValue: inputSexualPreference,\n              onInputChange: (e, newInputValue) => setInputSexualPreference(newInputValue),\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Sexual Preference\",\n                variant: \"outlined\",\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"secondary\",\n              className: classes.submit,\n              children: \"UPDATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileEditScreen, \"pS6bJS/ajkmWIPjmzavbDrA6+ZA=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileEditScreen;\nexport default ProfileEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileEditScreen\");","map":{"version":3,"sources":["/Users/yoshinoseiji/Programming/Tinder_clone/backend/frontend/src/screens/ProfileEditScreen.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","Container","TextField","Autocomplete","Box","Button","CssBaseline","Alert","Loader","SettingsHeader","ProfilePhotoUploader","updateUserDetails","getUserDetails","listCards","USER_DETAILS_UPDATE_RESET","genderIdentities","sexualPreferences","useStyles","ProfileEditScreen","history","classes","profession","setProfession","selfIntroduction","setSelfIntroduction","genderIdentity","setGenderIdentity","inputGenderIdentity","setInputGenderIdentity","sexualPreference","setSexualPreference","inputSexualPreference","setInputSexualPreference","dispatch","userLogin","state","userInfo","userDetails","loading","error","user","userUpdateDetails","success","updateHandler","e","preventDefault","push","type","self_introduction","gender_identity","sexual_preference","overflowY","flexWrap","target","value","newValue","newInputValue","params","submit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport Loader from \"../components/Loader\";\nimport SettingsHeader from \"../components/SettingsHeader\";\nimport ProfilePhotoUploader from \"../components/ProfilePhotoUploader\";\n\nimport {\n  updateUserDetails,\n  getUserDetails,\n  listCards,\n} from \"../actions/userActions\";\n\nimport { USER_DETAILS_UPDATE_RESET } from \"../constants/userConstants\";\n\nimport {\n  genderIdentities,\n  sexualPreferences,\n} from \"../constants/genderConstants\";\n\nimport { useStyles } from \"../styles\";\n\nfunction ProfileEditScreen({ history }) {\n  const classes = useStyles();\n\n  const [profession, setProfession] = useState(\"\");\n  const [selfIntroduction, setSelfIntroduction] = useState(\"\");\n  const [genderIdentity, setGenderIdentity] = useState(\"Male\");\n  const [inputGenderIdentity, setInputGenderIdentity] = useState(\"Male\");\n  const [sexualPreference, setSexualPreference] = useState(\"All\");\n  const [inputSexualPreference, setInputSexualPreference] = useState(\"All\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdateDetails = useSelector((state) => state.userUpdateDetails);\n  const { success } = userUpdateDetails;\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateUserDetails(\n        profession,\n        selfIntroduction,\n        genderIdentity,\n        sexualPreference\n      )\n    );\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else if (!user) {\n      dispatch(getUserDetails());\n    } else if (success) {\n      dispatch({ type: USER_DETAILS_UPDATE_RESET });\n      dispatch(listCards());\n      dispatch(getUserDetails());\n      history.push(\"/profile\");\n    } else {\n      setProfession(user.profession ? user.profession : \"\");\n      setSelfIntroduction(user.self_introduction ? user.self_introduction : \"\");\n      setGenderIdentity(user.gender_identity);\n      setInputGenderIdentity(user.gender_identity);\n      setSexualPreference(user.sexual_preference);\n      setInputSexualPreference(user.sexual_preference);\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  return (\n    <div>\n      <SettingsHeader title=\"EDITINGS\" backTo=\"/profile\" />\n\n      <Box mt={1}>\n        <Container maxWidth=\"xs\">\n          <CssBaseline />\n          {loading ? (\n            <Loader />\n          ) : error ? (\n            <Alert severity=\"error\">{error}</Alert>\n          ) : (\n            user && (\n              <Box\n                textAlign=\"center\"\n                maxHeight=\"100vh\"\n                pb=\"5rem\"\n                style={{\n                  overflowY: \"scroll\",\n                  flexWrap: \"nowrap\",\n                }}\n              >\n                <ProfilePhotoUploader />\n\n                <form onSubmit={updateHandler}>\n                  <TextField\n                    label=\"Profession\"\n                    value={profession}\n                    variant=\"outlined\"\n                    autoFocus\n                    fullWidth\n                    margin=\"normal\"\n                    multiline\n                    onChange={(e) => setProfession(e.target.value)}\n                  ></TextField>\n\n                  <TextField\n                    label=\"Self Introduction\"\n                    value={selfIntroduction}\n                    variant=\"outlined\"\n                    fullWidth\n                    margin=\"normal\"\n                    multiline\n                    onChange={(e) => setSelfIntroduction(e.target.value)}\n                  ></TextField>\n\n                  <Autocomplete\n                    fullWidth\n                    options={genderIdentities}\n                    value={genderIdentity}\n                    onChange={(e, newValue) => setGenderIdentity(newValue)}\n                    inputValue={inputGenderIdentity}\n                    onInputChange={(e, newInputValue) =>\n                      setInputGenderIdentity(newInputValue)\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Gender Identity\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                      />\n                    )}\n                  />\n\n                  <Autocomplete\n                    fullWidth\n                    options={sexualPreferences}\n                    value={sexualPreference}\n                    onChange={(e, newValue) => setSexualPreference(newValue)}\n                    inputValue={inputSexualPreference}\n                    onInputChange={(e, newInputValue) =>\n                      setInputSexualPreference(newInputValue)\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Sexual Preference\"\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                      />\n                    )}\n                  />\n\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className={classes.submit}\n                  >\n                    UPDATE\n                  </Button>\n                </form>\n              </Box>\n            )\n          )}\n        </Container>\n      </Box>\n    </div>\n  );\n}\n\nexport default ProfileEditScreen;\n"]},"metadata":{},"sourceType":"module"}